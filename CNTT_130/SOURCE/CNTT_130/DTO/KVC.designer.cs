#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace DTO
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="DoAn")]
	public partial class KVCDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertCT_TroChoi(CT_TroChoi instance);
    partial void UpdateCT_TroChoi(CT_TroChoi instance);
    partial void DeleteCT_TroChoi(CT_TroChoi instance);
    partial void InsertVe_TP(Ve_TP instance);
    partial void UpdateVe_TP(Ve_TP instance);
    partial void DeleteVe_TP(Ve_TP instance);
    partial void InsertCTPN_TB(CTPN_TB instance);
    partial void UpdateCTPN_TB(CTPN_TB instance);
    partial void DeleteCTPN_TB(CTPN_TB instance);
    partial void InsertCTPN_TP(CTPN_TP instance);
    partial void UpdateCTPN_TP(CTPN_TP instance);
    partial void DeleteCTPN_TP(CTPN_TP instance);
    partial void InsertCTHD_TP(CTHD_TP instance);
    partial void UpdateCTHD_TP(CTHD_TP instance);
    partial void DeleteCTHD_TP(CTHD_TP instance);
    partial void InsertCTHD_Ve(CTHD_Ve instance);
    partial void UpdateCTHD_Ve(CTHD_Ve instance);
    partial void DeleteCTHD_Ve(CTHD_Ve instance);
    partial void InsertHoaDon(HoaDon instance);
    partial void UpdateHoaDon(HoaDon instance);
    partial void DeleteHoaDon(HoaDon instance);
    partial void InsertKhachHang(KhachHang instance);
    partial void UpdateKhachHang(KhachHang instance);
    partial void DeleteKhachHang(KhachHang instance);
    partial void InsertKhuyenMai(KhuyenMai instance);
    partial void UpdateKhuyenMai(KhuyenMai instance);
    partial void DeleteKhuyenMai(KhuyenMai instance);
    partial void InsertLichLamViec(LichLamViec instance);
    partial void UpdateLichLamViec(LichLamViec instance);
    partial void DeleteLichLamViec(LichLamViec instance);
    partial void InsertLoaiKH(LoaiKH instance);
    partial void UpdateLoaiKH(LoaiKH instance);
    partial void DeleteLoaiKH(LoaiKH instance);
    partial void InsertLoaiNV(LoaiNV instance);
    partial void UpdateLoaiNV(LoaiNV instance);
    partial void DeleteLoaiNV(LoaiNV instance);
    partial void InsertLoaiTC(LoaiTC instance);
    partial void UpdateLoaiTC(LoaiTC instance);
    partial void DeleteLoaiTC(LoaiTC instance);
    partial void InsertLoaiTP(LoaiTP instance);
    partial void UpdateLoaiTP(LoaiTP instance);
    partial void DeleteLoaiTP(LoaiTP instance);
    partial void InsertLoaiVe(LoaiVe instance);
    partial void UpdateLoaiVe(LoaiVe instance);
    partial void DeleteLoaiVe(LoaiVe instance);
    partial void InsertManHinh(ManHinh instance);
    partial void UpdateManHinh(ManHinh instance);
    partial void DeleteManHinh(ManHinh instance);
    partial void InsertNhaCungCap(NhaCungCap instance);
    partial void UpdateNhaCungCap(NhaCungCap instance);
    partial void DeleteNhaCungCap(NhaCungCap instance);
    partial void InsertNhaCungCap_DanhSachSP(NhaCungCap_DanhSachSP instance);
    partial void UpdateNhaCungCap_DanhSachSP(NhaCungCap_DanhSachSP instance);
    partial void DeleteNhaCungCap_DanhSachSP(NhaCungCap_DanhSachSP instance);
    partial void InsertNhanVien(NhanVien instance);
    partial void UpdateNhanVien(NhanVien instance);
    partial void DeleteNhanVien(NhanVien instance);
    partial void InsertPhanQuyen(PhanQuyen instance);
    partial void UpdatePhanQuyen(PhanQuyen instance);
    partial void DeletePhanQuyen(PhanQuyen instance);
    partial void InsertPhieuNhap(PhieuNhap instance);
    partial void UpdatePhieuNhap(PhieuNhap instance);
    partial void DeletePhieuNhap(PhieuNhap instance);
    partial void InsertTaiKhoan(TaiKhoan instance);
    partial void UpdateTaiKhoan(TaiKhoan instance);
    partial void DeleteTaiKhoan(TaiKhoan instance);
    partial void InsertTKB(TKB instance);
    partial void UpdateTKB(TKB instance);
    partial void DeleteTKB(TKB instance);
    partial void InsertThietBi(ThietBi instance);
    partial void UpdateThietBi(ThietBi instance);
    partial void DeleteThietBi(ThietBi instance);
    partial void InsertThucPham(ThucPham instance);
    partial void UpdateThucPham(ThucPham instance);
    partial void DeleteThucPham(ThucPham instance);
    partial void InsertTroChoi(TroChoi instance);
    partial void UpdateTroChoi(TroChoi instance);
    partial void DeleteTroChoi(TroChoi instance);
    partial void InsertVaiTro(VaiTro instance);
    partial void UpdateVaiTro(VaiTro instance);
    partial void DeleteVaiTro(VaiTro instance);
    partial void InsertVe(Ve instance);
    partial void UpdateVe(Ve instance);
    partial void DeleteVe(Ve instance);
    #endregion
		
		public KVCDataContext() : 
				base(global::DTO.Properties.Settings.Default.DoAnConnectionString1, mappingSource)
		{
			OnCreated();
		}
		
		public KVCDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public KVCDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public KVCDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public KVCDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<CT_TroChoi> CT_TroChois
		{
			get
			{
				return this.GetTable<CT_TroChoi>();
			}
		}
		
		public System.Data.Linq.Table<Ve_TP> Ve_TPs
		{
			get
			{
				return this.GetTable<Ve_TP>();
			}
		}
		
		public System.Data.Linq.Table<CTPN_TB> CTPN_TBs
		{
			get
			{
				return this.GetTable<CTPN_TB>();
			}
		}
		
		public System.Data.Linq.Table<CTPN_TP> CTPN_TPs
		{
			get
			{
				return this.GetTable<CTPN_TP>();
			}
		}
		
		public System.Data.Linq.Table<CTHD_TP> CTHD_TPs
		{
			get
			{
				return this.GetTable<CTHD_TP>();
			}
		}
		
		public System.Data.Linq.Table<CTHD_Ve> CTHD_Ves
		{
			get
			{
				return this.GetTable<CTHD_Ve>();
			}
		}
		
		public System.Data.Linq.Table<HoaDon> HoaDons
		{
			get
			{
				return this.GetTable<HoaDon>();
			}
		}
		
		public System.Data.Linq.Table<KhachHang> KhachHangs
		{
			get
			{
				return this.GetTable<KhachHang>();
			}
		}
		
		public System.Data.Linq.Table<KhuyenMai> KhuyenMais
		{
			get
			{
				return this.GetTable<KhuyenMai>();
			}
		}
		
		public System.Data.Linq.Table<LichLamViec> LichLamViecs
		{
			get
			{
				return this.GetTable<LichLamViec>();
			}
		}
		
		public System.Data.Linq.Table<LoaiKH> LoaiKHs
		{
			get
			{
				return this.GetTable<LoaiKH>();
			}
		}
		
		public System.Data.Linq.Table<LoaiNV> LoaiNVs
		{
			get
			{
				return this.GetTable<LoaiNV>();
			}
		}
		
		public System.Data.Linq.Table<LoaiTC> LoaiTCs
		{
			get
			{
				return this.GetTable<LoaiTC>();
			}
		}
		
		public System.Data.Linq.Table<LoaiTP> LoaiTPs
		{
			get
			{
				return this.GetTable<LoaiTP>();
			}
		}
		
		public System.Data.Linq.Table<LoaiVe> LoaiVes
		{
			get
			{
				return this.GetTable<LoaiVe>();
			}
		}
		
		public System.Data.Linq.Table<ManHinh> ManHinhs
		{
			get
			{
				return this.GetTable<ManHinh>();
			}
		}
		
		public System.Data.Linq.Table<NhaCungCap> NhaCungCaps
		{
			get
			{
				return this.GetTable<NhaCungCap>();
			}
		}
		
		public System.Data.Linq.Table<NhaCungCap_DanhSachSP> NhaCungCap_DanhSachSPs
		{
			get
			{
				return this.GetTable<NhaCungCap_DanhSachSP>();
			}
		}
		
		public System.Data.Linq.Table<NhanVien> NhanViens
		{
			get
			{
				return this.GetTable<NhanVien>();
			}
		}
		
		public System.Data.Linq.Table<PhanQuyen> PhanQuyens
		{
			get
			{
				return this.GetTable<PhanQuyen>();
			}
		}
		
		public System.Data.Linq.Table<PhieuNhap> PhieuNhaps
		{
			get
			{
				return this.GetTable<PhieuNhap>();
			}
		}
		
		public System.Data.Linq.Table<TaiKhoan> TaiKhoans
		{
			get
			{
				return this.GetTable<TaiKhoan>();
			}
		}
		
		public System.Data.Linq.Table<TKB> TKBs
		{
			get
			{
				return this.GetTable<TKB>();
			}
		}
		
		public System.Data.Linq.Table<ThietBi> ThietBis
		{
			get
			{
				return this.GetTable<ThietBi>();
			}
		}
		
		public System.Data.Linq.Table<ThucPham> ThucPhams
		{
			get
			{
				return this.GetTable<ThucPham>();
			}
		}
		
		public System.Data.Linq.Table<TroChoi> TroChois
		{
			get
			{
				return this.GetTable<TroChoi>();
			}
		}
		
		public System.Data.Linq.Table<VaiTro> VaiTros
		{
			get
			{
				return this.GetTable<VaiTro>();
			}
		}
		
		public System.Data.Linq.Table<Ve> Ves
		{
			get
			{
				return this.GetTable<Ve>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.CT_TroChoi")]
	public partial class CT_TroChoi : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _MaTC;
		
		private string _MaTB;
		
		private System.Nullable<int> _SoLuong;
		
		private EntityRef<ThietBi> _ThietBi;
		
		private EntityRef<TroChoi> _TroChoi;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMaTCChanging(string value);
    partial void OnMaTCChanged();
    partial void OnMaTBChanging(string value);
    partial void OnMaTBChanged();
    partial void OnSoLuongChanging(System.Nullable<int> value);
    partial void OnSoLuongChanged();
    #endregion
		
		public CT_TroChoi()
		{
			this._ThietBi = default(EntityRef<ThietBi>);
			this._TroChoi = default(EntityRef<TroChoi>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaTC", DbType="VarChar(10) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string MaTC
		{
			get
			{
				return this._MaTC;
			}
			set
			{
				if ((this._MaTC != value))
				{
					if (this._TroChoi.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMaTCChanging(value);
					this.SendPropertyChanging();
					this._MaTC = value;
					this.SendPropertyChanged("MaTC");
					this.OnMaTCChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaTB", DbType="VarChar(10) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string MaTB
		{
			get
			{
				return this._MaTB;
			}
			set
			{
				if ((this._MaTB != value))
				{
					if (this._ThietBi.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMaTBChanging(value);
					this.SendPropertyChanging();
					this._MaTB = value;
					this.SendPropertyChanged("MaTB");
					this.OnMaTBChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SoLuong", DbType="Int")]
		public System.Nullable<int> SoLuong
		{
			get
			{
				return this._SoLuong;
			}
			set
			{
				if ((this._SoLuong != value))
				{
					this.OnSoLuongChanging(value);
					this.SendPropertyChanging();
					this._SoLuong = value;
					this.SendPropertyChanged("SoLuong");
					this.OnSoLuongChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ThietBi_CT_TroChoi", Storage="_ThietBi", ThisKey="MaTB", OtherKey="MaTB", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public ThietBi ThietBi
		{
			get
			{
				return this._ThietBi.Entity;
			}
			set
			{
				ThietBi previousValue = this._ThietBi.Entity;
				if (((previousValue != value) 
							|| (this._ThietBi.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ThietBi.Entity = null;
						previousValue.CT_TroChois.Remove(this);
					}
					this._ThietBi.Entity = value;
					if ((value != null))
					{
						value.CT_TroChois.Add(this);
						this._MaTB = value.MaTB;
					}
					else
					{
						this._MaTB = default(string);
					}
					this.SendPropertyChanged("ThietBi");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TroChoi_CT_TroChoi", Storage="_TroChoi", ThisKey="MaTC", OtherKey="MaTC", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public TroChoi TroChoi
		{
			get
			{
				return this._TroChoi.Entity;
			}
			set
			{
				TroChoi previousValue = this._TroChoi.Entity;
				if (((previousValue != value) 
							|| (this._TroChoi.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._TroChoi.Entity = null;
						previousValue.CT_TroChois.Remove(this);
					}
					this._TroChoi.Entity = value;
					if ((value != null))
					{
						value.CT_TroChois.Add(this);
						this._MaTC = value.MaTC;
					}
					else
					{
						this._MaTC = default(string);
					}
					this.SendPropertyChanged("TroChoi");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Ve_TP")]
	public partial class Ve_TP : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _MaCTHD;
		
		private string _MaTP;
		
		private System.Nullable<int> _SoLuong;
		
		private System.Nullable<double> _DonGia;
		
		private System.Nullable<double> _ThanhTien;
		
		private EntityRef<CTHD_Ve> _CTHD_Ve;
		
		private EntityRef<ThucPham> _ThucPham;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMaCTHDChanging(string value);
    partial void OnMaCTHDChanged();
    partial void OnMaTPChanging(string value);
    partial void OnMaTPChanged();
    partial void OnSoLuongChanging(System.Nullable<int> value);
    partial void OnSoLuongChanged();
    partial void OnDonGiaChanging(System.Nullable<double> value);
    partial void OnDonGiaChanged();
    partial void OnThanhTienChanging(System.Nullable<double> value);
    partial void OnThanhTienChanged();
    #endregion
		
		public Ve_TP()
		{
			this._CTHD_Ve = default(EntityRef<CTHD_Ve>);
			this._ThucPham = default(EntityRef<ThucPham>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaCTHD", DbType="VarChar(10) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string MaCTHD
		{
			get
			{
				return this._MaCTHD;
			}
			set
			{
				if ((this._MaCTHD != value))
				{
					if (this._CTHD_Ve.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMaCTHDChanging(value);
					this.SendPropertyChanging();
					this._MaCTHD = value;
					this.SendPropertyChanged("MaCTHD");
					this.OnMaCTHDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaTP", DbType="VarChar(10) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string MaTP
		{
			get
			{
				return this._MaTP;
			}
			set
			{
				if ((this._MaTP != value))
				{
					if (this._ThucPham.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMaTPChanging(value);
					this.SendPropertyChanging();
					this._MaTP = value;
					this.SendPropertyChanged("MaTP");
					this.OnMaTPChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SoLuong", DbType="Int")]
		public System.Nullable<int> SoLuong
		{
			get
			{
				return this._SoLuong;
			}
			set
			{
				if ((this._SoLuong != value))
				{
					this.OnSoLuongChanging(value);
					this.SendPropertyChanging();
					this._SoLuong = value;
					this.SendPropertyChanged("SoLuong");
					this.OnSoLuongChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DonGia", DbType="Float")]
		public System.Nullable<double> DonGia
		{
			get
			{
				return this._DonGia;
			}
			set
			{
				if ((this._DonGia != value))
				{
					this.OnDonGiaChanging(value);
					this.SendPropertyChanging();
					this._DonGia = value;
					this.SendPropertyChanged("DonGia");
					this.OnDonGiaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ThanhTien", DbType="Float")]
		public System.Nullable<double> ThanhTien
		{
			get
			{
				return this._ThanhTien;
			}
			set
			{
				if ((this._ThanhTien != value))
				{
					this.OnThanhTienChanging(value);
					this.SendPropertyChanging();
					this._ThanhTien = value;
					this.SendPropertyChanged("ThanhTien");
					this.OnThanhTienChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CTHD_Ve_Ve_TP", Storage="_CTHD_Ve", ThisKey="MaCTHD", OtherKey="MaCTHD", IsForeignKey=true)]
		public CTHD_Ve CTHD_Ve
		{
			get
			{
				return this._CTHD_Ve.Entity;
			}
			set
			{
				CTHD_Ve previousValue = this._CTHD_Ve.Entity;
				if (((previousValue != value) 
							|| (this._CTHD_Ve.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._CTHD_Ve.Entity = null;
						previousValue.Ve_TPs.Remove(this);
					}
					this._CTHD_Ve.Entity = value;
					if ((value != null))
					{
						value.Ve_TPs.Add(this);
						this._MaCTHD = value.MaCTHD;
					}
					else
					{
						this._MaCTHD = default(string);
					}
					this.SendPropertyChanged("CTHD_Ve");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ThucPham_Ve_TP", Storage="_ThucPham", ThisKey="MaTP", OtherKey="MaTP", IsForeignKey=true)]
		public ThucPham ThucPham
		{
			get
			{
				return this._ThucPham.Entity;
			}
			set
			{
				ThucPham previousValue = this._ThucPham.Entity;
				if (((previousValue != value) 
							|| (this._ThucPham.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ThucPham.Entity = null;
						previousValue.Ve_TPs.Remove(this);
					}
					this._ThucPham.Entity = value;
					if ((value != null))
					{
						value.Ve_TPs.Add(this);
						this._MaTP = value.MaTP;
					}
					else
					{
						this._MaTP = default(string);
					}
					this.SendPropertyChanged("ThucPham");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.CTPN_TB")]
	public partial class CTPN_TB : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _MaPhieu;
		
		private string _MaTB;
		
		private string _TenTB;
		
		private System.Nullable<int> _SoLuong;
		
		private System.Nullable<double> _GiaNhap;
		
		private System.Nullable<double> _ThanhTien;
		
		private EntityRef<PhieuNhap> _PhieuNhap;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMaPhieuChanging(string value);
    partial void OnMaPhieuChanged();
    partial void OnMaTBChanging(string value);
    partial void OnMaTBChanged();
    partial void OnTenTBChanging(string value);
    partial void OnTenTBChanged();
    partial void OnSoLuongChanging(System.Nullable<int> value);
    partial void OnSoLuongChanged();
    partial void OnGiaNhapChanging(System.Nullable<double> value);
    partial void OnGiaNhapChanged();
    partial void OnThanhTienChanging(System.Nullable<double> value);
    partial void OnThanhTienChanged();
    #endregion
		
		public CTPN_TB()
		{
			this._PhieuNhap = default(EntityRef<PhieuNhap>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaPhieu", DbType="VarChar(10) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string MaPhieu
		{
			get
			{
				return this._MaPhieu;
			}
			set
			{
				if ((this._MaPhieu != value))
				{
					if (this._PhieuNhap.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMaPhieuChanging(value);
					this.SendPropertyChanging();
					this._MaPhieu = value;
					this.SendPropertyChanged("MaPhieu");
					this.OnMaPhieuChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaTB", DbType="VarChar(10) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string MaTB
		{
			get
			{
				return this._MaTB;
			}
			set
			{
				if ((this._MaTB != value))
				{
					this.OnMaTBChanging(value);
					this.SendPropertyChanging();
					this._MaTB = value;
					this.SendPropertyChanged("MaTB");
					this.OnMaTBChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TenTB", DbType="NVarChar(50)")]
		public string TenTB
		{
			get
			{
				return this._TenTB;
			}
			set
			{
				if ((this._TenTB != value))
				{
					this.OnTenTBChanging(value);
					this.SendPropertyChanging();
					this._TenTB = value;
					this.SendPropertyChanged("TenTB");
					this.OnTenTBChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SoLuong", DbType="Int")]
		public System.Nullable<int> SoLuong
		{
			get
			{
				return this._SoLuong;
			}
			set
			{
				if ((this._SoLuong != value))
				{
					this.OnSoLuongChanging(value);
					this.SendPropertyChanging();
					this._SoLuong = value;
					this.SendPropertyChanged("SoLuong");
					this.OnSoLuongChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GiaNhap", DbType="Float")]
		public System.Nullable<double> GiaNhap
		{
			get
			{
				return this._GiaNhap;
			}
			set
			{
				if ((this._GiaNhap != value))
				{
					this.OnGiaNhapChanging(value);
					this.SendPropertyChanging();
					this._GiaNhap = value;
					this.SendPropertyChanged("GiaNhap");
					this.OnGiaNhapChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ThanhTien", DbType="Float")]
		public System.Nullable<double> ThanhTien
		{
			get
			{
				return this._ThanhTien;
			}
			set
			{
				if ((this._ThanhTien != value))
				{
					this.OnThanhTienChanging(value);
					this.SendPropertyChanging();
					this._ThanhTien = value;
					this.SendPropertyChanged("ThanhTien");
					this.OnThanhTienChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PhieuNhap_CTPN_TB", Storage="_PhieuNhap", ThisKey="MaPhieu", OtherKey="MaPhieu", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public PhieuNhap PhieuNhap
		{
			get
			{
				return this._PhieuNhap.Entity;
			}
			set
			{
				PhieuNhap previousValue = this._PhieuNhap.Entity;
				if (((previousValue != value) 
							|| (this._PhieuNhap.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._PhieuNhap.Entity = null;
						previousValue.CTPN_TBs.Remove(this);
					}
					this._PhieuNhap.Entity = value;
					if ((value != null))
					{
						value.CTPN_TBs.Add(this);
						this._MaPhieu = value.MaPhieu;
					}
					else
					{
						this._MaPhieu = default(string);
					}
					this.SendPropertyChanged("PhieuNhap");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.CTPN_TP")]
	public partial class CTPN_TP : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _MaPhieu;
		
		private string _MaTP;
		
		private string _TenTP;
		
		private string _DVT;
		
		private System.Nullable<int> _SoLuong;
		
		private System.Nullable<double> _GiaNhap;
		
		private System.Nullable<double> _ThanhTien;
		
		private EntityRef<PhieuNhap> _PhieuNhap;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMaPhieuChanging(string value);
    partial void OnMaPhieuChanged();
    partial void OnMaTPChanging(string value);
    partial void OnMaTPChanged();
    partial void OnTenTPChanging(string value);
    partial void OnTenTPChanged();
    partial void OnDVTChanging(string value);
    partial void OnDVTChanged();
    partial void OnSoLuongChanging(System.Nullable<int> value);
    partial void OnSoLuongChanged();
    partial void OnGiaNhapChanging(System.Nullable<double> value);
    partial void OnGiaNhapChanged();
    partial void OnThanhTienChanging(System.Nullable<double> value);
    partial void OnThanhTienChanged();
    #endregion
		
		public CTPN_TP()
		{
			this._PhieuNhap = default(EntityRef<PhieuNhap>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaPhieu", DbType="VarChar(10) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string MaPhieu
		{
			get
			{
				return this._MaPhieu;
			}
			set
			{
				if ((this._MaPhieu != value))
				{
					if (this._PhieuNhap.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMaPhieuChanging(value);
					this.SendPropertyChanging();
					this._MaPhieu = value;
					this.SendPropertyChanged("MaPhieu");
					this.OnMaPhieuChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaTP", DbType="VarChar(10) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string MaTP
		{
			get
			{
				return this._MaTP;
			}
			set
			{
				if ((this._MaTP != value))
				{
					this.OnMaTPChanging(value);
					this.SendPropertyChanging();
					this._MaTP = value;
					this.SendPropertyChanged("MaTP");
					this.OnMaTPChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TenTP", DbType="NVarChar(50)")]
		public string TenTP
		{
			get
			{
				return this._TenTP;
			}
			set
			{
				if ((this._TenTP != value))
				{
					this.OnTenTPChanging(value);
					this.SendPropertyChanging();
					this._TenTP = value;
					this.SendPropertyChanged("TenTP");
					this.OnTenTPChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DVT", DbType="NVarChar(15)")]
		public string DVT
		{
			get
			{
				return this._DVT;
			}
			set
			{
				if ((this._DVT != value))
				{
					this.OnDVTChanging(value);
					this.SendPropertyChanging();
					this._DVT = value;
					this.SendPropertyChanged("DVT");
					this.OnDVTChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SoLuong", DbType="Int")]
		public System.Nullable<int> SoLuong
		{
			get
			{
				return this._SoLuong;
			}
			set
			{
				if ((this._SoLuong != value))
				{
					this.OnSoLuongChanging(value);
					this.SendPropertyChanging();
					this._SoLuong = value;
					this.SendPropertyChanged("SoLuong");
					this.OnSoLuongChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GiaNhap", DbType="Float")]
		public System.Nullable<double> GiaNhap
		{
			get
			{
				return this._GiaNhap;
			}
			set
			{
				if ((this._GiaNhap != value))
				{
					this.OnGiaNhapChanging(value);
					this.SendPropertyChanging();
					this._GiaNhap = value;
					this.SendPropertyChanged("GiaNhap");
					this.OnGiaNhapChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ThanhTien", DbType="Float")]
		public System.Nullable<double> ThanhTien
		{
			get
			{
				return this._ThanhTien;
			}
			set
			{
				if ((this._ThanhTien != value))
				{
					this.OnThanhTienChanging(value);
					this.SendPropertyChanging();
					this._ThanhTien = value;
					this.SendPropertyChanged("ThanhTien");
					this.OnThanhTienChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PhieuNhap_CTPN_TP", Storage="_PhieuNhap", ThisKey="MaPhieu", OtherKey="MaPhieu", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public PhieuNhap PhieuNhap
		{
			get
			{
				return this._PhieuNhap.Entity;
			}
			set
			{
				PhieuNhap previousValue = this._PhieuNhap.Entity;
				if (((previousValue != value) 
							|| (this._PhieuNhap.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._PhieuNhap.Entity = null;
						previousValue.CTPN_TPs.Remove(this);
					}
					this._PhieuNhap.Entity = value;
					if ((value != null))
					{
						value.CTPN_TPs.Add(this);
						this._MaPhieu = value.MaPhieu;
					}
					else
					{
						this._MaPhieu = default(string);
					}
					this.SendPropertyChanged("PhieuNhap");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.CTHD_TP")]
	public partial class CTHD_TP : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _MaHD;
		
		private string _MaTP;
		
		private System.Nullable<int> _SoLuong;
		
		private System.Nullable<double> _ThanhTien;
		
		private string _TinhTrang;
		
		private EntityRef<HoaDon> _HoaDon;
		
		private EntityRef<ThucPham> _ThucPham;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMaHDChanging(string value);
    partial void OnMaHDChanged();
    partial void OnMaTPChanging(string value);
    partial void OnMaTPChanged();
    partial void OnSoLuongChanging(System.Nullable<int> value);
    partial void OnSoLuongChanged();
    partial void OnThanhTienChanging(System.Nullable<double> value);
    partial void OnThanhTienChanged();
    partial void OnTinhTrangChanging(string value);
    partial void OnTinhTrangChanged();
    #endregion
		
		public CTHD_TP()
		{
			this._HoaDon = default(EntityRef<HoaDon>);
			this._ThucPham = default(EntityRef<ThucPham>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaHD", DbType="VarChar(10) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string MaHD
		{
			get
			{
				return this._MaHD;
			}
			set
			{
				if ((this._MaHD != value))
				{
					if (this._HoaDon.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMaHDChanging(value);
					this.SendPropertyChanging();
					this._MaHD = value;
					this.SendPropertyChanged("MaHD");
					this.OnMaHDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaTP", DbType="VarChar(10) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string MaTP
		{
			get
			{
				return this._MaTP;
			}
			set
			{
				if ((this._MaTP != value))
				{
					if (this._ThucPham.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMaTPChanging(value);
					this.SendPropertyChanging();
					this._MaTP = value;
					this.SendPropertyChanged("MaTP");
					this.OnMaTPChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SoLuong", DbType="Int")]
		public System.Nullable<int> SoLuong
		{
			get
			{
				return this._SoLuong;
			}
			set
			{
				if ((this._SoLuong != value))
				{
					this.OnSoLuongChanging(value);
					this.SendPropertyChanging();
					this._SoLuong = value;
					this.SendPropertyChanged("SoLuong");
					this.OnSoLuongChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ThanhTien", DbType="Float")]
		public System.Nullable<double> ThanhTien
		{
			get
			{
				return this._ThanhTien;
			}
			set
			{
				if ((this._ThanhTien != value))
				{
					this.OnThanhTienChanging(value);
					this.SendPropertyChanging();
					this._ThanhTien = value;
					this.SendPropertyChanged("ThanhTien");
					this.OnThanhTienChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TinhTrang", DbType="NVarChar(30)")]
		public string TinhTrang
		{
			get
			{
				return this._TinhTrang;
			}
			set
			{
				if ((this._TinhTrang != value))
				{
					this.OnTinhTrangChanging(value);
					this.SendPropertyChanging();
					this._TinhTrang = value;
					this.SendPropertyChanged("TinhTrang");
					this.OnTinhTrangChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="HoaDon_CTHD_TP", Storage="_HoaDon", ThisKey="MaHD", OtherKey="MaHD", IsForeignKey=true)]
		public HoaDon HoaDon
		{
			get
			{
				return this._HoaDon.Entity;
			}
			set
			{
				HoaDon previousValue = this._HoaDon.Entity;
				if (((previousValue != value) 
							|| (this._HoaDon.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._HoaDon.Entity = null;
						previousValue.CTHD_TPs.Remove(this);
					}
					this._HoaDon.Entity = value;
					if ((value != null))
					{
						value.CTHD_TPs.Add(this);
						this._MaHD = value.MaHD;
					}
					else
					{
						this._MaHD = default(string);
					}
					this.SendPropertyChanged("HoaDon");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ThucPham_CTHD_TP", Storage="_ThucPham", ThisKey="MaTP", OtherKey="MaTP", IsForeignKey=true)]
		public ThucPham ThucPham
		{
			get
			{
				return this._ThucPham.Entity;
			}
			set
			{
				ThucPham previousValue = this._ThucPham.Entity;
				if (((previousValue != value) 
							|| (this._ThucPham.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ThucPham.Entity = null;
						previousValue.CTHD_TPs.Remove(this);
					}
					this._ThucPham.Entity = value;
					if ((value != null))
					{
						value.CTHD_TPs.Add(this);
						this._MaTP = value.MaTP;
					}
					else
					{
						this._MaTP = default(string);
					}
					this.SendPropertyChanged("ThucPham");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.CTHD_Ve")]
	public partial class CTHD_Ve : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _MaCTHD;
		
		private string _MaHD;
		
		private string _MaNV;
		
		private string _MaVe;
		
		private System.Nullable<int> _SoNguoiLon;
		
		private System.Nullable<int> _SoTreEm;
		
		private string _TinhTrang;
		
		private System.Nullable<double> _ThanhTien;
		
		private EntitySet<Ve_TP> _Ve_TPs;
		
		private EntityRef<HoaDon> _HoaDon;
		
		private EntityRef<NhanVien> _NhanVien;
		
		private EntityRef<Ve> _Ve;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMaCTHDChanging(string value);
    partial void OnMaCTHDChanged();
    partial void OnMaHDChanging(string value);
    partial void OnMaHDChanged();
    partial void OnMaNVChanging(string value);
    partial void OnMaNVChanged();
    partial void OnMaVeChanging(string value);
    partial void OnMaVeChanged();
    partial void OnSoNguoiLonChanging(System.Nullable<int> value);
    partial void OnSoNguoiLonChanged();
    partial void OnSoTreEmChanging(System.Nullable<int> value);
    partial void OnSoTreEmChanged();
    partial void OnTinhTrangChanging(string value);
    partial void OnTinhTrangChanged();
    partial void OnThanhTienChanging(System.Nullable<double> value);
    partial void OnThanhTienChanged();
    #endregion
		
		public CTHD_Ve()
		{
			this._Ve_TPs = new EntitySet<Ve_TP>(new Action<Ve_TP>(this.attach_Ve_TPs), new Action<Ve_TP>(this.detach_Ve_TPs));
			this._HoaDon = default(EntityRef<HoaDon>);
			this._NhanVien = default(EntityRef<NhanVien>);
			this._Ve = default(EntityRef<Ve>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaCTHD", DbType="VarChar(10) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string MaCTHD
		{
			get
			{
				return this._MaCTHD;
			}
			set
			{
				if ((this._MaCTHD != value))
				{
					this.OnMaCTHDChanging(value);
					this.SendPropertyChanging();
					this._MaCTHD = value;
					this.SendPropertyChanged("MaCTHD");
					this.OnMaCTHDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaHD", DbType="VarChar(10)")]
		public string MaHD
		{
			get
			{
				return this._MaHD;
			}
			set
			{
				if ((this._MaHD != value))
				{
					if (this._HoaDon.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMaHDChanging(value);
					this.SendPropertyChanging();
					this._MaHD = value;
					this.SendPropertyChanged("MaHD");
					this.OnMaHDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaNV", DbType="VarChar(10)")]
		public string MaNV
		{
			get
			{
				return this._MaNV;
			}
			set
			{
				if ((this._MaNV != value))
				{
					if (this._NhanVien.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMaNVChanging(value);
					this.SendPropertyChanging();
					this._MaNV = value;
					this.SendPropertyChanged("MaNV");
					this.OnMaNVChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaVe", DbType="VarChar(10)")]
		public string MaVe
		{
			get
			{
				return this._MaVe;
			}
			set
			{
				if ((this._MaVe != value))
				{
					if (this._Ve.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMaVeChanging(value);
					this.SendPropertyChanging();
					this._MaVe = value;
					this.SendPropertyChanged("MaVe");
					this.OnMaVeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SoNguoiLon", DbType="Int")]
		public System.Nullable<int> SoNguoiLon
		{
			get
			{
				return this._SoNguoiLon;
			}
			set
			{
				if ((this._SoNguoiLon != value))
				{
					this.OnSoNguoiLonChanging(value);
					this.SendPropertyChanging();
					this._SoNguoiLon = value;
					this.SendPropertyChanged("SoNguoiLon");
					this.OnSoNguoiLonChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SoTreEm", DbType="Int")]
		public System.Nullable<int> SoTreEm
		{
			get
			{
				return this._SoTreEm;
			}
			set
			{
				if ((this._SoTreEm != value))
				{
					this.OnSoTreEmChanging(value);
					this.SendPropertyChanging();
					this._SoTreEm = value;
					this.SendPropertyChanged("SoTreEm");
					this.OnSoTreEmChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TinhTrang", DbType="NVarChar(30)")]
		public string TinhTrang
		{
			get
			{
				return this._TinhTrang;
			}
			set
			{
				if ((this._TinhTrang != value))
				{
					this.OnTinhTrangChanging(value);
					this.SendPropertyChanging();
					this._TinhTrang = value;
					this.SendPropertyChanged("TinhTrang");
					this.OnTinhTrangChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ThanhTien", DbType="Float")]
		public System.Nullable<double> ThanhTien
		{
			get
			{
				return this._ThanhTien;
			}
			set
			{
				if ((this._ThanhTien != value))
				{
					this.OnThanhTienChanging(value);
					this.SendPropertyChanging();
					this._ThanhTien = value;
					this.SendPropertyChanged("ThanhTien");
					this.OnThanhTienChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CTHD_Ve_Ve_TP", Storage="_Ve_TPs", ThisKey="MaCTHD", OtherKey="MaCTHD")]
		public EntitySet<Ve_TP> Ve_TPs
		{
			get
			{
				return this._Ve_TPs;
			}
			set
			{
				this._Ve_TPs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="HoaDon_CTHD_Ve", Storage="_HoaDon", ThisKey="MaHD", OtherKey="MaHD", IsForeignKey=true)]
		public HoaDon HoaDon
		{
			get
			{
				return this._HoaDon.Entity;
			}
			set
			{
				HoaDon previousValue = this._HoaDon.Entity;
				if (((previousValue != value) 
							|| (this._HoaDon.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._HoaDon.Entity = null;
						previousValue.CTHD_Ves.Remove(this);
					}
					this._HoaDon.Entity = value;
					if ((value != null))
					{
						value.CTHD_Ves.Add(this);
						this._MaHD = value.MaHD;
					}
					else
					{
						this._MaHD = default(string);
					}
					this.SendPropertyChanged("HoaDon");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="NhanVien_CTHD_Ve", Storage="_NhanVien", ThisKey="MaNV", OtherKey="MaNV", IsForeignKey=true)]
		public NhanVien NhanVien
		{
			get
			{
				return this._NhanVien.Entity;
			}
			set
			{
				NhanVien previousValue = this._NhanVien.Entity;
				if (((previousValue != value) 
							|| (this._NhanVien.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._NhanVien.Entity = null;
						previousValue.CTHD_Ves.Remove(this);
					}
					this._NhanVien.Entity = value;
					if ((value != null))
					{
						value.CTHD_Ves.Add(this);
						this._MaNV = value.MaNV;
					}
					else
					{
						this._MaNV = default(string);
					}
					this.SendPropertyChanged("NhanVien");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Ve_CTHD_Ve", Storage="_Ve", ThisKey="MaVe", OtherKey="MaVe", IsForeignKey=true)]
		public Ve Ve
		{
			get
			{
				return this._Ve.Entity;
			}
			set
			{
				Ve previousValue = this._Ve.Entity;
				if (((previousValue != value) 
							|| (this._Ve.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Ve.Entity = null;
						previousValue.CTHD_Ves.Remove(this);
					}
					this._Ve.Entity = value;
					if ((value != null))
					{
						value.CTHD_Ves.Add(this);
						this._MaVe = value.MaVe;
					}
					else
					{
						this._MaVe = default(string);
					}
					this.SendPropertyChanged("Ve");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Ve_TPs(Ve_TP entity)
		{
			this.SendPropertyChanging();
			entity.CTHD_Ve = this;
		}
		
		private void detach_Ve_TPs(Ve_TP entity)
		{
			this.SendPropertyChanging();
			entity.CTHD_Ve = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.HoaDon")]
	public partial class HoaDon : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _MaHD;
		
		private string _MaKH;
		
		private string _MaKM;
		
		private System.Nullable<System.DateTime> _NgayIn;
		
		private System.Nullable<double> _TongTien;
		
		private EntitySet<CTHD_TP> _CTHD_TPs;
		
		private EntitySet<CTHD_Ve> _CTHD_Ves;
		
		private EntityRef<KhachHang> _KhachHang;
		
		private EntityRef<KhuyenMai> _KhuyenMai;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMaHDChanging(string value);
    partial void OnMaHDChanged();
    partial void OnMaKHChanging(string value);
    partial void OnMaKHChanged();
    partial void OnMaKMChanging(string value);
    partial void OnMaKMChanged();
    partial void OnNgayInChanging(System.Nullable<System.DateTime> value);
    partial void OnNgayInChanged();
    partial void OnTongTienChanging(System.Nullable<double> value);
    partial void OnTongTienChanged();
    #endregion
		
		public HoaDon()
		{
			this._CTHD_TPs = new EntitySet<CTHD_TP>(new Action<CTHD_TP>(this.attach_CTHD_TPs), new Action<CTHD_TP>(this.detach_CTHD_TPs));
			this._CTHD_Ves = new EntitySet<CTHD_Ve>(new Action<CTHD_Ve>(this.attach_CTHD_Ves), new Action<CTHD_Ve>(this.detach_CTHD_Ves));
			this._KhachHang = default(EntityRef<KhachHang>);
			this._KhuyenMai = default(EntityRef<KhuyenMai>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaHD", DbType="VarChar(10) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string MaHD
		{
			get
			{
				return this._MaHD;
			}
			set
			{
				if ((this._MaHD != value))
				{
					this.OnMaHDChanging(value);
					this.SendPropertyChanging();
					this._MaHD = value;
					this.SendPropertyChanged("MaHD");
					this.OnMaHDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaKH", DbType="VarChar(10)")]
		public string MaKH
		{
			get
			{
				return this._MaKH;
			}
			set
			{
				if ((this._MaKH != value))
				{
					if (this._KhachHang.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMaKHChanging(value);
					this.SendPropertyChanging();
					this._MaKH = value;
					this.SendPropertyChanged("MaKH");
					this.OnMaKHChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaKM", DbType="VarChar(10)")]
		public string MaKM
		{
			get
			{
				return this._MaKM;
			}
			set
			{
				if ((this._MaKM != value))
				{
					if (this._KhuyenMai.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMaKMChanging(value);
					this.SendPropertyChanging();
					this._MaKM = value;
					this.SendPropertyChanged("MaKM");
					this.OnMaKMChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NgayIn", DbType="Date")]
		public System.Nullable<System.DateTime> NgayIn
		{
			get
			{
				return this._NgayIn;
			}
			set
			{
				if ((this._NgayIn != value))
				{
					this.OnNgayInChanging(value);
					this.SendPropertyChanging();
					this._NgayIn = value;
					this.SendPropertyChanged("NgayIn");
					this.OnNgayInChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TongTien", DbType="Float")]
		public System.Nullable<double> TongTien
		{
			get
			{
				return this._TongTien;
			}
			set
			{
				if ((this._TongTien != value))
				{
					this.OnTongTienChanging(value);
					this.SendPropertyChanging();
					this._TongTien = value;
					this.SendPropertyChanged("TongTien");
					this.OnTongTienChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="HoaDon_CTHD_TP", Storage="_CTHD_TPs", ThisKey="MaHD", OtherKey="MaHD")]
		public EntitySet<CTHD_TP> CTHD_TPs
		{
			get
			{
				return this._CTHD_TPs;
			}
			set
			{
				this._CTHD_TPs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="HoaDon_CTHD_Ve", Storage="_CTHD_Ves", ThisKey="MaHD", OtherKey="MaHD")]
		public EntitySet<CTHD_Ve> CTHD_Ves
		{
			get
			{
				return this._CTHD_Ves;
			}
			set
			{
				this._CTHD_Ves.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="KhachHang_HoaDon", Storage="_KhachHang", ThisKey="MaKH", OtherKey="MaKH", IsForeignKey=true)]
		public KhachHang KhachHang
		{
			get
			{
				return this._KhachHang.Entity;
			}
			set
			{
				KhachHang previousValue = this._KhachHang.Entity;
				if (((previousValue != value) 
							|| (this._KhachHang.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._KhachHang.Entity = null;
						previousValue.HoaDons.Remove(this);
					}
					this._KhachHang.Entity = value;
					if ((value != null))
					{
						value.HoaDons.Add(this);
						this._MaKH = value.MaKH;
					}
					else
					{
						this._MaKH = default(string);
					}
					this.SendPropertyChanged("KhachHang");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="KhuyenMai_HoaDon", Storage="_KhuyenMai", ThisKey="MaKM", OtherKey="MaKM", IsForeignKey=true)]
		public KhuyenMai KhuyenMai
		{
			get
			{
				return this._KhuyenMai.Entity;
			}
			set
			{
				KhuyenMai previousValue = this._KhuyenMai.Entity;
				if (((previousValue != value) 
							|| (this._KhuyenMai.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._KhuyenMai.Entity = null;
						previousValue.HoaDons.Remove(this);
					}
					this._KhuyenMai.Entity = value;
					if ((value != null))
					{
						value.HoaDons.Add(this);
						this._MaKM = value.MaKM;
					}
					else
					{
						this._MaKM = default(string);
					}
					this.SendPropertyChanged("KhuyenMai");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_CTHD_TPs(CTHD_TP entity)
		{
			this.SendPropertyChanging();
			entity.HoaDon = this;
		}
		
		private void detach_CTHD_TPs(CTHD_TP entity)
		{
			this.SendPropertyChanging();
			entity.HoaDon = null;
		}
		
		private void attach_CTHD_Ves(CTHD_Ve entity)
		{
			this.SendPropertyChanging();
			entity.HoaDon = this;
		}
		
		private void detach_CTHD_Ves(CTHD_Ve entity)
		{
			this.SendPropertyChanging();
			entity.HoaDon = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.KhachHang")]
	public partial class KhachHang : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _MaKH;
		
		private string _HoTen;
		
		private System.Nullable<System.DateTime> _NgaySinh;
		
		private string _SDT;
		
		private System.Nullable<int> _Diem;
		
		private string _LoaiKH;
		
		private int _SoTreEm;
		
		private EntitySet<HoaDon> _HoaDons;
		
		private EntityRef<LoaiKH> _LoaiKH1;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMaKHChanging(string value);
    partial void OnMaKHChanged();
    partial void OnHoTenChanging(string value);
    partial void OnHoTenChanged();
    partial void OnNgaySinhChanging(System.Nullable<System.DateTime> value);
    partial void OnNgaySinhChanged();
    partial void OnSDTChanging(string value);
    partial void OnSDTChanged();
    partial void OnDiemChanging(System.Nullable<int> value);
    partial void OnDiemChanged();
    partial void OnLoaiKHChanging(string value);
    partial void OnLoaiKHChanged();
    partial void OnSoTreEmChanging(int value);
    partial void OnSoTreEmChanged();
    #endregion
		
		public KhachHang()
		{
			this._HoaDons = new EntitySet<HoaDon>(new Action<HoaDon>(this.attach_HoaDons), new Action<HoaDon>(this.detach_HoaDons));
			this._LoaiKH1 = default(EntityRef<LoaiKH>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaKH", DbType="VarChar(10) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string MaKH
		{
			get
			{
				return this._MaKH;
			}
			set
			{
				if ((this._MaKH != value))
				{
					this.OnMaKHChanging(value);
					this.SendPropertyChanging();
					this._MaKH = value;
					this.SendPropertyChanged("MaKH");
					this.OnMaKHChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HoTen", DbType="NVarChar(50)")]
		public string HoTen
		{
			get
			{
				return this._HoTen;
			}
			set
			{
				if ((this._HoTen != value))
				{
					this.OnHoTenChanging(value);
					this.SendPropertyChanging();
					this._HoTen = value;
					this.SendPropertyChanged("HoTen");
					this.OnHoTenChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NgaySinh", DbType="Date")]
		public System.Nullable<System.DateTime> NgaySinh
		{
			get
			{
				return this._NgaySinh;
			}
			set
			{
				if ((this._NgaySinh != value))
				{
					this.OnNgaySinhChanging(value);
					this.SendPropertyChanging();
					this._NgaySinh = value;
					this.SendPropertyChanged("NgaySinh");
					this.OnNgaySinhChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SDT", DbType="VarChar(15)")]
		public string SDT
		{
			get
			{
				return this._SDT;
			}
			set
			{
				if ((this._SDT != value))
				{
					this.OnSDTChanging(value);
					this.SendPropertyChanging();
					this._SDT = value;
					this.SendPropertyChanged("SDT");
					this.OnSDTChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Diem", DbType="Int")]
		public System.Nullable<int> Diem
		{
			get
			{
				return this._Diem;
			}
			set
			{
				if ((this._Diem != value))
				{
					this.OnDiemChanging(value);
					this.SendPropertyChanging();
					this._Diem = value;
					this.SendPropertyChanged("Diem");
					this.OnDiemChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LoaiKH", DbType="VarChar(10)")]
		public string LoaiKH
		{
			get
			{
				return this._LoaiKH;
			}
			set
			{
				if ((this._LoaiKH != value))
				{
					if (this._LoaiKH1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnLoaiKHChanging(value);
					this.SendPropertyChanging();
					this._LoaiKH = value;
					this.SendPropertyChanged("LoaiKH");
					this.OnLoaiKHChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SoTreEm", DbType="Int NOT NULL")]
		public int SoTreEm
		{
			get
			{
				return this._SoTreEm;
			}
			set
			{
				if ((this._SoTreEm != value))
				{
					this.OnSoTreEmChanging(value);
					this.SendPropertyChanging();
					this._SoTreEm = value;
					this.SendPropertyChanged("SoTreEm");
					this.OnSoTreEmChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="KhachHang_HoaDon", Storage="_HoaDons", ThisKey="MaKH", OtherKey="MaKH")]
		public EntitySet<HoaDon> HoaDons
		{
			get
			{
				return this._HoaDons;
			}
			set
			{
				this._HoaDons.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="LoaiKH_KhachHang", Storage="_LoaiKH1", ThisKey="LoaiKH", OtherKey="MaLoai", IsForeignKey=true)]
		public LoaiKH LoaiKH1
		{
			get
			{
				return this._LoaiKH1.Entity;
			}
			set
			{
				LoaiKH previousValue = this._LoaiKH1.Entity;
				if (((previousValue != value) 
							|| (this._LoaiKH1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._LoaiKH1.Entity = null;
						previousValue.KhachHangs.Remove(this);
					}
					this._LoaiKH1.Entity = value;
					if ((value != null))
					{
						value.KhachHangs.Add(this);
						this._LoaiKH = value.MaLoai;
					}
					else
					{
						this._LoaiKH = default(string);
					}
					this.SendPropertyChanged("LoaiKH1");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_HoaDons(HoaDon entity)
		{
			this.SendPropertyChanging();
			entity.KhachHang = this;
		}
		
		private void detach_HoaDons(HoaDon entity)
		{
			this.SendPropertyChanging();
			entity.KhachHang = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.KhuyenMai")]
	public partial class KhuyenMai : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _MaKM;
		
		private string _TenKM;
		
		private System.Nullable<System.DateTime> _NgayBatDau;
		
		private System.Nullable<System.DateTime> _NgayKetThuc;
		
		private System.Nullable<double> _PhanTramGiam;
		
		private string _TinhTrang;
		
		private string _MoTa;
		
		private EntitySet<HoaDon> _HoaDons;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMaKMChanging(string value);
    partial void OnMaKMChanged();
    partial void OnTenKMChanging(string value);
    partial void OnTenKMChanged();
    partial void OnNgayBatDauChanging(System.Nullable<System.DateTime> value);
    partial void OnNgayBatDauChanged();
    partial void OnNgayKetThucChanging(System.Nullable<System.DateTime> value);
    partial void OnNgayKetThucChanged();
    partial void OnPhanTramGiamChanging(System.Nullable<double> value);
    partial void OnPhanTramGiamChanged();
    partial void OnTinhTrangChanging(string value);
    partial void OnTinhTrangChanged();
    partial void OnMoTaChanging(string value);
    partial void OnMoTaChanged();
    #endregion
		
		public KhuyenMai()
		{
			this._HoaDons = new EntitySet<HoaDon>(new Action<HoaDon>(this.attach_HoaDons), new Action<HoaDon>(this.detach_HoaDons));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaKM", DbType="VarChar(10) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string MaKM
		{
			get
			{
				return this._MaKM;
			}
			set
			{
				if ((this._MaKM != value))
				{
					this.OnMaKMChanging(value);
					this.SendPropertyChanging();
					this._MaKM = value;
					this.SendPropertyChanged("MaKM");
					this.OnMaKMChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TenKM", DbType="NVarChar(100)")]
		public string TenKM
		{
			get
			{
				return this._TenKM;
			}
			set
			{
				if ((this._TenKM != value))
				{
					this.OnTenKMChanging(value);
					this.SendPropertyChanging();
					this._TenKM = value;
					this.SendPropertyChanged("TenKM");
					this.OnTenKMChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NgayBatDau", DbType="Date")]
		public System.Nullable<System.DateTime> NgayBatDau
		{
			get
			{
				return this._NgayBatDau;
			}
			set
			{
				if ((this._NgayBatDau != value))
				{
					this.OnNgayBatDauChanging(value);
					this.SendPropertyChanging();
					this._NgayBatDau = value;
					this.SendPropertyChanged("NgayBatDau");
					this.OnNgayBatDauChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NgayKetThuc", DbType="Date")]
		public System.Nullable<System.DateTime> NgayKetThuc
		{
			get
			{
				return this._NgayKetThuc;
			}
			set
			{
				if ((this._NgayKetThuc != value))
				{
					this.OnNgayKetThucChanging(value);
					this.SendPropertyChanging();
					this._NgayKetThuc = value;
					this.SendPropertyChanged("NgayKetThuc");
					this.OnNgayKetThucChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PhanTramGiam", DbType="Float")]
		public System.Nullable<double> PhanTramGiam
		{
			get
			{
				return this._PhanTramGiam;
			}
			set
			{
				if ((this._PhanTramGiam != value))
				{
					this.OnPhanTramGiamChanging(value);
					this.SendPropertyChanging();
					this._PhanTramGiam = value;
					this.SendPropertyChanged("PhanTramGiam");
					this.OnPhanTramGiamChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TinhTrang", DbType="NVarChar(20)")]
		public string TinhTrang
		{
			get
			{
				return this._TinhTrang;
			}
			set
			{
				if ((this._TinhTrang != value))
				{
					this.OnTinhTrangChanging(value);
					this.SendPropertyChanging();
					this._TinhTrang = value;
					this.SendPropertyChanged("TinhTrang");
					this.OnTinhTrangChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MoTa", DbType="NVarChar(100)")]
		public string MoTa
		{
			get
			{
				return this._MoTa;
			}
			set
			{
				if ((this._MoTa != value))
				{
					this.OnMoTaChanging(value);
					this.SendPropertyChanging();
					this._MoTa = value;
					this.SendPropertyChanged("MoTa");
					this.OnMoTaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="KhuyenMai_HoaDon", Storage="_HoaDons", ThisKey="MaKM", OtherKey="MaKM")]
		public EntitySet<HoaDon> HoaDons
		{
			get
			{
				return this._HoaDons;
			}
			set
			{
				this._HoaDons.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_HoaDons(HoaDon entity)
		{
			this.SendPropertyChanging();
			entity.KhuyenMai = this;
		}
		
		private void detach_HoaDons(HoaDon entity)
		{
			this.SendPropertyChanging();
			entity.KhuyenMai = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.LichLamViec")]
	public partial class LichLamViec : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _MaLich;
		
		private System.Nullable<int> _Ca;
		
		private string _ThoiGianLam;
		
		private EntitySet<TKB> _TKBs;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMaLichChanging(string value);
    partial void OnMaLichChanged();
    partial void OnCaChanging(System.Nullable<int> value);
    partial void OnCaChanged();
    partial void OnThoiGianLamChanging(string value);
    partial void OnThoiGianLamChanged();
    #endregion
		
		public LichLamViec()
		{
			this._TKBs = new EntitySet<TKB>(new Action<TKB>(this.attach_TKBs), new Action<TKB>(this.detach_TKBs));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaLich", DbType="VarChar(10) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string MaLich
		{
			get
			{
				return this._MaLich;
			}
			set
			{
				if ((this._MaLich != value))
				{
					this.OnMaLichChanging(value);
					this.SendPropertyChanging();
					this._MaLich = value;
					this.SendPropertyChanged("MaLich");
					this.OnMaLichChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Ca", DbType="Int")]
		public System.Nullable<int> Ca
		{
			get
			{
				return this._Ca;
			}
			set
			{
				if ((this._Ca != value))
				{
					this.OnCaChanging(value);
					this.SendPropertyChanging();
					this._Ca = value;
					this.SendPropertyChanged("Ca");
					this.OnCaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ThoiGianLam", DbType="NVarChar(30)")]
		public string ThoiGianLam
		{
			get
			{
				return this._ThoiGianLam;
			}
			set
			{
				if ((this._ThoiGianLam != value))
				{
					this.OnThoiGianLamChanging(value);
					this.SendPropertyChanging();
					this._ThoiGianLam = value;
					this.SendPropertyChanged("ThoiGianLam");
					this.OnThoiGianLamChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="LichLamViec_TKB", Storage="_TKBs", ThisKey="MaLich", OtherKey="MaLich")]
		public EntitySet<TKB> TKBs
		{
			get
			{
				return this._TKBs;
			}
			set
			{
				this._TKBs.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_TKBs(TKB entity)
		{
			this.SendPropertyChanging();
			entity.LichLamViec = this;
		}
		
		private void detach_TKBs(TKB entity)
		{
			this.SendPropertyChanging();
			entity.LichLamViec = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.LoaiKH")]
	public partial class LoaiKH : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _MaLoai;
		
		private string _TenLoai;
		
		private System.Nullable<int> _SoDiemCanThangLoai;
		
		private EntitySet<KhachHang> _KhachHangs;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMaLoaiChanging(string value);
    partial void OnMaLoaiChanged();
    partial void OnTenLoaiChanging(string value);
    partial void OnTenLoaiChanged();
    partial void OnSoDiemCanThangLoaiChanging(System.Nullable<int> value);
    partial void OnSoDiemCanThangLoaiChanged();
    #endregion
		
		public LoaiKH()
		{
			this._KhachHangs = new EntitySet<KhachHang>(new Action<KhachHang>(this.attach_KhachHangs), new Action<KhachHang>(this.detach_KhachHangs));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaLoai", DbType="VarChar(10) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string MaLoai
		{
			get
			{
				return this._MaLoai;
			}
			set
			{
				if ((this._MaLoai != value))
				{
					this.OnMaLoaiChanging(value);
					this.SendPropertyChanging();
					this._MaLoai = value;
					this.SendPropertyChanged("MaLoai");
					this.OnMaLoaiChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TenLoai", DbType="NVarChar(50)")]
		public string TenLoai
		{
			get
			{
				return this._TenLoai;
			}
			set
			{
				if ((this._TenLoai != value))
				{
					this.OnTenLoaiChanging(value);
					this.SendPropertyChanging();
					this._TenLoai = value;
					this.SendPropertyChanged("TenLoai");
					this.OnTenLoaiChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SoDiemCanThangLoai", DbType="Int")]
		public System.Nullable<int> SoDiemCanThangLoai
		{
			get
			{
				return this._SoDiemCanThangLoai;
			}
			set
			{
				if ((this._SoDiemCanThangLoai != value))
				{
					this.OnSoDiemCanThangLoaiChanging(value);
					this.SendPropertyChanging();
					this._SoDiemCanThangLoai = value;
					this.SendPropertyChanged("SoDiemCanThangLoai");
					this.OnSoDiemCanThangLoaiChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="LoaiKH_KhachHang", Storage="_KhachHangs", ThisKey="MaLoai", OtherKey="LoaiKH")]
		public EntitySet<KhachHang> KhachHangs
		{
			get
			{
				return this._KhachHangs;
			}
			set
			{
				this._KhachHangs.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_KhachHangs(KhachHang entity)
		{
			this.SendPropertyChanging();
			entity.LoaiKH1 = this;
		}
		
		private void detach_KhachHangs(KhachHang entity)
		{
			this.SendPropertyChanging();
			entity.LoaiKH1 = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.LoaiNV")]
	public partial class LoaiNV : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _MaLoai;
		
		private string _ChucVu;
		
		private System.Nullable<double> _HeSoLuong;
		
		private System.Nullable<double> _LuongCB;
		
		private EntitySet<NhanVien> _NhanViens;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMaLoaiChanging(string value);
    partial void OnMaLoaiChanged();
    partial void OnChucVuChanging(string value);
    partial void OnChucVuChanged();
    partial void OnHeSoLuongChanging(System.Nullable<double> value);
    partial void OnHeSoLuongChanged();
    partial void OnLuongCBChanging(System.Nullable<double> value);
    partial void OnLuongCBChanged();
    #endregion
		
		public LoaiNV()
		{
			this._NhanViens = new EntitySet<NhanVien>(new Action<NhanVien>(this.attach_NhanViens), new Action<NhanVien>(this.detach_NhanViens));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaLoai", DbType="VarChar(10) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string MaLoai
		{
			get
			{
				return this._MaLoai;
			}
			set
			{
				if ((this._MaLoai != value))
				{
					this.OnMaLoaiChanging(value);
					this.SendPropertyChanging();
					this._MaLoai = value;
					this.SendPropertyChanged("MaLoai");
					this.OnMaLoaiChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ChucVu", DbType="NVarChar(50)")]
		public string ChucVu
		{
			get
			{
				return this._ChucVu;
			}
			set
			{
				if ((this._ChucVu != value))
				{
					this.OnChucVuChanging(value);
					this.SendPropertyChanging();
					this._ChucVu = value;
					this.SendPropertyChanged("ChucVu");
					this.OnChucVuChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HeSoLuong", DbType="Float")]
		public System.Nullable<double> HeSoLuong
		{
			get
			{
				return this._HeSoLuong;
			}
			set
			{
				if ((this._HeSoLuong != value))
				{
					this.OnHeSoLuongChanging(value);
					this.SendPropertyChanging();
					this._HeSoLuong = value;
					this.SendPropertyChanged("HeSoLuong");
					this.OnHeSoLuongChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LuongCB", DbType="Float")]
		public System.Nullable<double> LuongCB
		{
			get
			{
				return this._LuongCB;
			}
			set
			{
				if ((this._LuongCB != value))
				{
					this.OnLuongCBChanging(value);
					this.SendPropertyChanging();
					this._LuongCB = value;
					this.SendPropertyChanged("LuongCB");
					this.OnLuongCBChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="LoaiNV_NhanVien", Storage="_NhanViens", ThisKey="MaLoai", OtherKey="LoaiNV")]
		public EntitySet<NhanVien> NhanViens
		{
			get
			{
				return this._NhanViens;
			}
			set
			{
				this._NhanViens.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_NhanViens(NhanVien entity)
		{
			this.SendPropertyChanging();
			entity.LoaiNV1 = this;
		}
		
		private void detach_NhanViens(NhanVien entity)
		{
			this.SendPropertyChanging();
			entity.LoaiNV1 = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.LoaiTC")]
	public partial class LoaiTC : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _MaLoai;
		
		private string _TenLoai;
		
		private string _GhiChu;
		
		private EntitySet<TroChoi> _TroChois;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMaLoaiChanging(string value);
    partial void OnMaLoaiChanged();
    partial void OnTenLoaiChanging(string value);
    partial void OnTenLoaiChanged();
    partial void OnGhiChuChanging(string value);
    partial void OnGhiChuChanged();
    #endregion
		
		public LoaiTC()
		{
			this._TroChois = new EntitySet<TroChoi>(new Action<TroChoi>(this.attach_TroChois), new Action<TroChoi>(this.detach_TroChois));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaLoai", DbType="VarChar(10) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string MaLoai
		{
			get
			{
				return this._MaLoai;
			}
			set
			{
				if ((this._MaLoai != value))
				{
					this.OnMaLoaiChanging(value);
					this.SendPropertyChanging();
					this._MaLoai = value;
					this.SendPropertyChanged("MaLoai");
					this.OnMaLoaiChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TenLoai", DbType="NVarChar(50)")]
		public string TenLoai
		{
			get
			{
				return this._TenLoai;
			}
			set
			{
				if ((this._TenLoai != value))
				{
					this.OnTenLoaiChanging(value);
					this.SendPropertyChanging();
					this._TenLoai = value;
					this.SendPropertyChanged("TenLoai");
					this.OnTenLoaiChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GhiChu", DbType="NVarChar(50)")]
		public string GhiChu
		{
			get
			{
				return this._GhiChu;
			}
			set
			{
				if ((this._GhiChu != value))
				{
					this.OnGhiChuChanging(value);
					this.SendPropertyChanging();
					this._GhiChu = value;
					this.SendPropertyChanged("GhiChu");
					this.OnGhiChuChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="LoaiTC_TroChoi", Storage="_TroChois", ThisKey="MaLoai", OtherKey="LoaiTroChoi")]
		public EntitySet<TroChoi> TroChois
		{
			get
			{
				return this._TroChois;
			}
			set
			{
				this._TroChois.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_TroChois(TroChoi entity)
		{
			this.SendPropertyChanging();
			entity.LoaiTC = this;
		}
		
		private void detach_TroChois(TroChoi entity)
		{
			this.SendPropertyChanging();
			entity.LoaiTC = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.LoaiTP")]
	public partial class LoaiTP : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _MaLoai;
		
		private string _TenLoai;
		
		private EntitySet<ThucPham> _ThucPhams;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMaLoaiChanging(string value);
    partial void OnMaLoaiChanged();
    partial void OnTenLoaiChanging(string value);
    partial void OnTenLoaiChanged();
    #endregion
		
		public LoaiTP()
		{
			this._ThucPhams = new EntitySet<ThucPham>(new Action<ThucPham>(this.attach_ThucPhams), new Action<ThucPham>(this.detach_ThucPhams));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaLoai", DbType="VarChar(10) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string MaLoai
		{
			get
			{
				return this._MaLoai;
			}
			set
			{
				if ((this._MaLoai != value))
				{
					this.OnMaLoaiChanging(value);
					this.SendPropertyChanging();
					this._MaLoai = value;
					this.SendPropertyChanged("MaLoai");
					this.OnMaLoaiChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TenLoai", DbType="NVarChar(50)")]
		public string TenLoai
		{
			get
			{
				return this._TenLoai;
			}
			set
			{
				if ((this._TenLoai != value))
				{
					this.OnTenLoaiChanging(value);
					this.SendPropertyChanging();
					this._TenLoai = value;
					this.SendPropertyChanged("TenLoai");
					this.OnTenLoaiChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="LoaiTP_ThucPham", Storage="_ThucPhams", ThisKey="MaLoai", OtherKey="MaLoai")]
		public EntitySet<ThucPham> ThucPhams
		{
			get
			{
				return this._ThucPhams;
			}
			set
			{
				this._ThucPhams.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_ThucPhams(ThucPham entity)
		{
			this.SendPropertyChanging();
			entity.LoaiTP = this;
		}
		
		private void detach_ThucPhams(ThucPham entity)
		{
			this.SendPropertyChanging();
			entity.LoaiTP = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.LoaiVe")]
	public partial class LoaiVe : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _MaLoai;
		
		private string _TenLoai;
		
		private System.Nullable<double> _GiaTien;
		
		private EntitySet<Ve> _Ves;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMaLoaiChanging(string value);
    partial void OnMaLoaiChanged();
    partial void OnTenLoaiChanging(string value);
    partial void OnTenLoaiChanged();
    partial void OnGiaTienChanging(System.Nullable<double> value);
    partial void OnGiaTienChanged();
    #endregion
		
		public LoaiVe()
		{
			this._Ves = new EntitySet<Ve>(new Action<Ve>(this.attach_Ves), new Action<Ve>(this.detach_Ves));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaLoai", DbType="VarChar(10) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string MaLoai
		{
			get
			{
				return this._MaLoai;
			}
			set
			{
				if ((this._MaLoai != value))
				{
					this.OnMaLoaiChanging(value);
					this.SendPropertyChanging();
					this._MaLoai = value;
					this.SendPropertyChanged("MaLoai");
					this.OnMaLoaiChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TenLoai", DbType="NVarChar(30)")]
		public string TenLoai
		{
			get
			{
				return this._TenLoai;
			}
			set
			{
				if ((this._TenLoai != value))
				{
					this.OnTenLoaiChanging(value);
					this.SendPropertyChanging();
					this._TenLoai = value;
					this.SendPropertyChanged("TenLoai");
					this.OnTenLoaiChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GiaTien", DbType="Float")]
		public System.Nullable<double> GiaTien
		{
			get
			{
				return this._GiaTien;
			}
			set
			{
				if ((this._GiaTien != value))
				{
					this.OnGiaTienChanging(value);
					this.SendPropertyChanging();
					this._GiaTien = value;
					this.SendPropertyChanged("GiaTien");
					this.OnGiaTienChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="LoaiVe_Ve", Storage="_Ves", ThisKey="MaLoai", OtherKey="LoaiVe")]
		public EntitySet<Ve> Ves
		{
			get
			{
				return this._Ves;
			}
			set
			{
				this._Ves.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Ves(Ve entity)
		{
			this.SendPropertyChanging();
			entity.LoaiVe1 = this;
		}
		
		private void detach_Ves(Ve entity)
		{
			this.SendPropertyChanging();
			entity.LoaiVe1 = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ManHinh")]
	public partial class ManHinh : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _MaMH;
		
		private string _TenMH;
		
		private EntitySet<PhanQuyen> _PhanQuyens;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMaMHChanging(string value);
    partial void OnMaMHChanged();
    partial void OnTenMHChanging(string value);
    partial void OnTenMHChanged();
    #endregion
		
		public ManHinh()
		{
			this._PhanQuyens = new EntitySet<PhanQuyen>(new Action<PhanQuyen>(this.attach_PhanQuyens), new Action<PhanQuyen>(this.detach_PhanQuyens));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaMH", DbType="VarChar(10) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string MaMH
		{
			get
			{
				return this._MaMH;
			}
			set
			{
				if ((this._MaMH != value))
				{
					this.OnMaMHChanging(value);
					this.SendPropertyChanging();
					this._MaMH = value;
					this.SendPropertyChanged("MaMH");
					this.OnMaMHChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TenMH", DbType="NVarChar(100)")]
		public string TenMH
		{
			get
			{
				return this._TenMH;
			}
			set
			{
				if ((this._TenMH != value))
				{
					this.OnTenMHChanging(value);
					this.SendPropertyChanging();
					this._TenMH = value;
					this.SendPropertyChanged("TenMH");
					this.OnTenMHChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ManHinh_PhanQuyen", Storage="_PhanQuyens", ThisKey="MaMH", OtherKey="MaMH")]
		public EntitySet<PhanQuyen> PhanQuyens
		{
			get
			{
				return this._PhanQuyens;
			}
			set
			{
				this._PhanQuyens.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_PhanQuyens(PhanQuyen entity)
		{
			this.SendPropertyChanging();
			entity.ManHinh = this;
		}
		
		private void detach_PhanQuyens(PhanQuyen entity)
		{
			this.SendPropertyChanging();
			entity.ManHinh = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.NhaCungCap")]
	public partial class NhaCungCap : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _MaNCC;
		
		private string _TenNCC;
		
		private string _DiaChi;
		
		private string _SoDienThoai;
		
		private string _Email;
		
		private string _TinhTrang;
		
		private System.Nullable<int> _LoaiNCC;
		
		private EntitySet<NhaCungCap_DanhSachSP> _NhaCungCap_DanhSachSPs;
		
		private EntitySet<PhieuNhap> _PhieuNhaps;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMaNCCChanging(string value);
    partial void OnMaNCCChanged();
    partial void OnTenNCCChanging(string value);
    partial void OnTenNCCChanged();
    partial void OnDiaChiChanging(string value);
    partial void OnDiaChiChanged();
    partial void OnSoDienThoaiChanging(string value);
    partial void OnSoDienThoaiChanged();
    partial void OnEmailChanging(string value);
    partial void OnEmailChanged();
    partial void OnTinhTrangChanging(string value);
    partial void OnTinhTrangChanged();
    partial void OnLoaiNCCChanging(System.Nullable<int> value);
    partial void OnLoaiNCCChanged();
    #endregion
		
		public NhaCungCap()
		{
			this._NhaCungCap_DanhSachSPs = new EntitySet<NhaCungCap_DanhSachSP>(new Action<NhaCungCap_DanhSachSP>(this.attach_NhaCungCap_DanhSachSPs), new Action<NhaCungCap_DanhSachSP>(this.detach_NhaCungCap_DanhSachSPs));
			this._PhieuNhaps = new EntitySet<PhieuNhap>(new Action<PhieuNhap>(this.attach_PhieuNhaps), new Action<PhieuNhap>(this.detach_PhieuNhaps));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaNCC", DbType="VarChar(10) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string MaNCC
		{
			get
			{
				return this._MaNCC;
			}
			set
			{
				if ((this._MaNCC != value))
				{
					this.OnMaNCCChanging(value);
					this.SendPropertyChanging();
					this._MaNCC = value;
					this.SendPropertyChanged("MaNCC");
					this.OnMaNCCChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TenNCC", DbType="NVarChar(50)")]
		public string TenNCC
		{
			get
			{
				return this._TenNCC;
			}
			set
			{
				if ((this._TenNCC != value))
				{
					this.OnTenNCCChanging(value);
					this.SendPropertyChanging();
					this._TenNCC = value;
					this.SendPropertyChanged("TenNCC");
					this.OnTenNCCChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DiaChi", DbType="NVarChar(100)")]
		public string DiaChi
		{
			get
			{
				return this._DiaChi;
			}
			set
			{
				if ((this._DiaChi != value))
				{
					this.OnDiaChiChanging(value);
					this.SendPropertyChanging();
					this._DiaChi = value;
					this.SendPropertyChanged("DiaChi");
					this.OnDiaChiChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SoDienThoai", DbType="VarChar(15)")]
		public string SoDienThoai
		{
			get
			{
				return this._SoDienThoai;
			}
			set
			{
				if ((this._SoDienThoai != value))
				{
					this.OnSoDienThoaiChanging(value);
					this.SendPropertyChanging();
					this._SoDienThoai = value;
					this.SendPropertyChanged("SoDienThoai");
					this.OnSoDienThoaiChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Email", DbType="NVarChar(50)")]
		public string Email
		{
			get
			{
				return this._Email;
			}
			set
			{
				if ((this._Email != value))
				{
					this.OnEmailChanging(value);
					this.SendPropertyChanging();
					this._Email = value;
					this.SendPropertyChanged("Email");
					this.OnEmailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TinhTrang", DbType="NVarChar(30)")]
		public string TinhTrang
		{
			get
			{
				return this._TinhTrang;
			}
			set
			{
				if ((this._TinhTrang != value))
				{
					this.OnTinhTrangChanging(value);
					this.SendPropertyChanging();
					this._TinhTrang = value;
					this.SendPropertyChanged("TinhTrang");
					this.OnTinhTrangChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LoaiNCC", DbType="Int")]
		public System.Nullable<int> LoaiNCC
		{
			get
			{
				return this._LoaiNCC;
			}
			set
			{
				if ((this._LoaiNCC != value))
				{
					this.OnLoaiNCCChanging(value);
					this.SendPropertyChanging();
					this._LoaiNCC = value;
					this.SendPropertyChanged("LoaiNCC");
					this.OnLoaiNCCChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="NhaCungCap_NhaCungCap_DanhSachSP", Storage="_NhaCungCap_DanhSachSPs", ThisKey="MaNCC", OtherKey="MaNCC")]
		public EntitySet<NhaCungCap_DanhSachSP> NhaCungCap_DanhSachSPs
		{
			get
			{
				return this._NhaCungCap_DanhSachSPs;
			}
			set
			{
				this._NhaCungCap_DanhSachSPs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="NhaCungCap_PhieuNhap", Storage="_PhieuNhaps", ThisKey="MaNCC", OtherKey="MaNCC")]
		public EntitySet<PhieuNhap> PhieuNhaps
		{
			get
			{
				return this._PhieuNhaps;
			}
			set
			{
				this._PhieuNhaps.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_NhaCungCap_DanhSachSPs(NhaCungCap_DanhSachSP entity)
		{
			this.SendPropertyChanging();
			entity.NhaCungCap = this;
		}
		
		private void detach_NhaCungCap_DanhSachSPs(NhaCungCap_DanhSachSP entity)
		{
			this.SendPropertyChanging();
			entity.NhaCungCap = null;
		}
		
		private void attach_PhieuNhaps(PhieuNhap entity)
		{
			this.SendPropertyChanging();
			entity.NhaCungCap = this;
		}
		
		private void detach_PhieuNhaps(PhieuNhap entity)
		{
			this.SendPropertyChanging();
			entity.NhaCungCap = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.NhaCungCap_DanhSachSP")]
	public partial class NhaCungCap_DanhSachSP : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _MaNCC;
		
		private string _MaSP;
		
		private string _TenSP;
		
		private System.Nullable<double> _GiaBan;
		
		private EntityRef<NhaCungCap> _NhaCungCap;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMaNCCChanging(string value);
    partial void OnMaNCCChanged();
    partial void OnMaSPChanging(string value);
    partial void OnMaSPChanged();
    partial void OnTenSPChanging(string value);
    partial void OnTenSPChanged();
    partial void OnGiaBanChanging(System.Nullable<double> value);
    partial void OnGiaBanChanged();
    #endregion
		
		public NhaCungCap_DanhSachSP()
		{
			this._NhaCungCap = default(EntityRef<NhaCungCap>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaNCC", DbType="VarChar(10) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string MaNCC
		{
			get
			{
				return this._MaNCC;
			}
			set
			{
				if ((this._MaNCC != value))
				{
					if (this._NhaCungCap.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMaNCCChanging(value);
					this.SendPropertyChanging();
					this._MaNCC = value;
					this.SendPropertyChanged("MaNCC");
					this.OnMaNCCChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaSP", DbType="VarChar(10) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string MaSP
		{
			get
			{
				return this._MaSP;
			}
			set
			{
				if ((this._MaSP != value))
				{
					this.OnMaSPChanging(value);
					this.SendPropertyChanging();
					this._MaSP = value;
					this.SendPropertyChanged("MaSP");
					this.OnMaSPChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TenSP", DbType="NVarChar(50)")]
		public string TenSP
		{
			get
			{
				return this._TenSP;
			}
			set
			{
				if ((this._TenSP != value))
				{
					this.OnTenSPChanging(value);
					this.SendPropertyChanging();
					this._TenSP = value;
					this.SendPropertyChanged("TenSP");
					this.OnTenSPChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GiaBan", DbType="Float")]
		public System.Nullable<double> GiaBan
		{
			get
			{
				return this._GiaBan;
			}
			set
			{
				if ((this._GiaBan != value))
				{
					this.OnGiaBanChanging(value);
					this.SendPropertyChanging();
					this._GiaBan = value;
					this.SendPropertyChanged("GiaBan");
					this.OnGiaBanChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="NhaCungCap_NhaCungCap_DanhSachSP", Storage="_NhaCungCap", ThisKey="MaNCC", OtherKey="MaNCC", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public NhaCungCap NhaCungCap
		{
			get
			{
				return this._NhaCungCap.Entity;
			}
			set
			{
				NhaCungCap previousValue = this._NhaCungCap.Entity;
				if (((previousValue != value) 
							|| (this._NhaCungCap.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._NhaCungCap.Entity = null;
						previousValue.NhaCungCap_DanhSachSPs.Remove(this);
					}
					this._NhaCungCap.Entity = value;
					if ((value != null))
					{
						value.NhaCungCap_DanhSachSPs.Add(this);
						this._MaNCC = value.MaNCC;
					}
					else
					{
						this._MaNCC = default(string);
					}
					this.SendPropertyChanged("NhaCungCap");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.NhanVien")]
	public partial class NhanVien : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _MaNV;
		
		private string _TenNV;
		
		private string _GioiTinh;
		
		private System.Nullable<System.DateTime> _NgaySinh;
		
		private string _CCCD;
		
		private string _LoaiNV;
		
		private EntitySet<CTHD_Ve> _CTHD_Ves;
		
		private EntitySet<PhieuNhap> _PhieuNhaps;
		
		private EntitySet<TaiKhoan> _TaiKhoans;
		
		private EntitySet<TKB> _TKBs;
		
		private EntityRef<LoaiNV> _LoaiNV1;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMaNVChanging(string value);
    partial void OnMaNVChanged();
    partial void OnTenNVChanging(string value);
    partial void OnTenNVChanged();
    partial void OnGioiTinhChanging(string value);
    partial void OnGioiTinhChanged();
    partial void OnNgaySinhChanging(System.Nullable<System.DateTime> value);
    partial void OnNgaySinhChanged();
    partial void OnCCCDChanging(string value);
    partial void OnCCCDChanged();
    partial void OnLoaiNVChanging(string value);
    partial void OnLoaiNVChanged();
    #endregion
		
		public NhanVien()
		{
			this._CTHD_Ves = new EntitySet<CTHD_Ve>(new Action<CTHD_Ve>(this.attach_CTHD_Ves), new Action<CTHD_Ve>(this.detach_CTHD_Ves));
			this._PhieuNhaps = new EntitySet<PhieuNhap>(new Action<PhieuNhap>(this.attach_PhieuNhaps), new Action<PhieuNhap>(this.detach_PhieuNhaps));
			this._TaiKhoans = new EntitySet<TaiKhoan>(new Action<TaiKhoan>(this.attach_TaiKhoans), new Action<TaiKhoan>(this.detach_TaiKhoans));
			this._TKBs = new EntitySet<TKB>(new Action<TKB>(this.attach_TKBs), new Action<TKB>(this.detach_TKBs));
			this._LoaiNV1 = default(EntityRef<LoaiNV>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaNV", DbType="VarChar(10) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string MaNV
		{
			get
			{
				return this._MaNV;
			}
			set
			{
				if ((this._MaNV != value))
				{
					this.OnMaNVChanging(value);
					this.SendPropertyChanging();
					this._MaNV = value;
					this.SendPropertyChanged("MaNV");
					this.OnMaNVChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TenNV", DbType="NVarChar(50)")]
		public string TenNV
		{
			get
			{
				return this._TenNV;
			}
			set
			{
				if ((this._TenNV != value))
				{
					this.OnTenNVChanging(value);
					this.SendPropertyChanging();
					this._TenNV = value;
					this.SendPropertyChanged("TenNV");
					this.OnTenNVChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GioiTinh", DbType="NVarChar(5)")]
		public string GioiTinh
		{
			get
			{
				return this._GioiTinh;
			}
			set
			{
				if ((this._GioiTinh != value))
				{
					this.OnGioiTinhChanging(value);
					this.SendPropertyChanging();
					this._GioiTinh = value;
					this.SendPropertyChanged("GioiTinh");
					this.OnGioiTinhChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NgaySinh", DbType="Date")]
		public System.Nullable<System.DateTime> NgaySinh
		{
			get
			{
				return this._NgaySinh;
			}
			set
			{
				if ((this._NgaySinh != value))
				{
					this.OnNgaySinhChanging(value);
					this.SendPropertyChanging();
					this._NgaySinh = value;
					this.SendPropertyChanged("NgaySinh");
					this.OnNgaySinhChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CCCD", DbType="VarChar(12)")]
		public string CCCD
		{
			get
			{
				return this._CCCD;
			}
			set
			{
				if ((this._CCCD != value))
				{
					this.OnCCCDChanging(value);
					this.SendPropertyChanging();
					this._CCCD = value;
					this.SendPropertyChanged("CCCD");
					this.OnCCCDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LoaiNV", DbType="VarChar(10)")]
		public string LoaiNV
		{
			get
			{
				return this._LoaiNV;
			}
			set
			{
				if ((this._LoaiNV != value))
				{
					if (this._LoaiNV1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnLoaiNVChanging(value);
					this.SendPropertyChanging();
					this._LoaiNV = value;
					this.SendPropertyChanged("LoaiNV");
					this.OnLoaiNVChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="NhanVien_CTHD_Ve", Storage="_CTHD_Ves", ThisKey="MaNV", OtherKey="MaNV")]
		public EntitySet<CTHD_Ve> CTHD_Ves
		{
			get
			{
				return this._CTHD_Ves;
			}
			set
			{
				this._CTHD_Ves.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="NhanVien_PhieuNhap", Storage="_PhieuNhaps", ThisKey="MaNV", OtherKey="MaNV")]
		public EntitySet<PhieuNhap> PhieuNhaps
		{
			get
			{
				return this._PhieuNhaps;
			}
			set
			{
				this._PhieuNhaps.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="NhanVien_TaiKhoan", Storage="_TaiKhoans", ThisKey="MaNV", OtherKey="MaNV")]
		public EntitySet<TaiKhoan> TaiKhoans
		{
			get
			{
				return this._TaiKhoans;
			}
			set
			{
				this._TaiKhoans.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="NhanVien_TKB", Storage="_TKBs", ThisKey="MaNV", OtherKey="MaNV")]
		public EntitySet<TKB> TKBs
		{
			get
			{
				return this._TKBs;
			}
			set
			{
				this._TKBs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="LoaiNV_NhanVien", Storage="_LoaiNV1", ThisKey="LoaiNV", OtherKey="MaLoai", IsForeignKey=true)]
		public LoaiNV LoaiNV1
		{
			get
			{
				return this._LoaiNV1.Entity;
			}
			set
			{
				LoaiNV previousValue = this._LoaiNV1.Entity;
				if (((previousValue != value) 
							|| (this._LoaiNV1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._LoaiNV1.Entity = null;
						previousValue.NhanViens.Remove(this);
					}
					this._LoaiNV1.Entity = value;
					if ((value != null))
					{
						value.NhanViens.Add(this);
						this._LoaiNV = value.MaLoai;
					}
					else
					{
						this._LoaiNV = default(string);
					}
					this.SendPropertyChanged("LoaiNV1");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_CTHD_Ves(CTHD_Ve entity)
		{
			this.SendPropertyChanging();
			entity.NhanVien = this;
		}
		
		private void detach_CTHD_Ves(CTHD_Ve entity)
		{
			this.SendPropertyChanging();
			entity.NhanVien = null;
		}
		
		private void attach_PhieuNhaps(PhieuNhap entity)
		{
			this.SendPropertyChanging();
			entity.NhanVien = this;
		}
		
		private void detach_PhieuNhaps(PhieuNhap entity)
		{
			this.SendPropertyChanging();
			entity.NhanVien = null;
		}
		
		private void attach_TaiKhoans(TaiKhoan entity)
		{
			this.SendPropertyChanging();
			entity.NhanVien = this;
		}
		
		private void detach_TaiKhoans(TaiKhoan entity)
		{
			this.SendPropertyChanging();
			entity.NhanVien = null;
		}
		
		private void attach_TKBs(TKB entity)
		{
			this.SendPropertyChanging();
			entity.NhanVien = this;
		}
		
		private void detach_TKBs(TKB entity)
		{
			this.SendPropertyChanging();
			entity.NhanVien = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.PhanQuyen")]
	public partial class PhanQuyen : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _MaVaiTro;
		
		private string _MaMH;
		
		private System.Nullable<int> _HoatDong;
		
		private EntityRef<ManHinh> _ManHinh;
		
		private EntityRef<VaiTro> _VaiTro;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMaVaiTroChanging(string value);
    partial void OnMaVaiTroChanged();
    partial void OnMaMHChanging(string value);
    partial void OnMaMHChanged();
    partial void OnHoatDongChanging(System.Nullable<int> value);
    partial void OnHoatDongChanged();
    #endregion
		
		public PhanQuyen()
		{
			this._ManHinh = default(EntityRef<ManHinh>);
			this._VaiTro = default(EntityRef<VaiTro>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaVaiTro", DbType="VarChar(10) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string MaVaiTro
		{
			get
			{
				return this._MaVaiTro;
			}
			set
			{
				if ((this._MaVaiTro != value))
				{
					if (this._VaiTro.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMaVaiTroChanging(value);
					this.SendPropertyChanging();
					this._MaVaiTro = value;
					this.SendPropertyChanged("MaVaiTro");
					this.OnMaVaiTroChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaMH", DbType="VarChar(10) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string MaMH
		{
			get
			{
				return this._MaMH;
			}
			set
			{
				if ((this._MaMH != value))
				{
					if (this._ManHinh.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMaMHChanging(value);
					this.SendPropertyChanging();
					this._MaMH = value;
					this.SendPropertyChanged("MaMH");
					this.OnMaMHChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HoatDong", DbType="Int")]
		public System.Nullable<int> HoatDong
		{
			get
			{
				return this._HoatDong;
			}
			set
			{
				if ((this._HoatDong != value))
				{
					this.OnHoatDongChanging(value);
					this.SendPropertyChanging();
					this._HoatDong = value;
					this.SendPropertyChanged("HoatDong");
					this.OnHoatDongChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ManHinh_PhanQuyen", Storage="_ManHinh", ThisKey="MaMH", OtherKey="MaMH", IsForeignKey=true)]
		public ManHinh ManHinh
		{
			get
			{
				return this._ManHinh.Entity;
			}
			set
			{
				ManHinh previousValue = this._ManHinh.Entity;
				if (((previousValue != value) 
							|| (this._ManHinh.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ManHinh.Entity = null;
						previousValue.PhanQuyens.Remove(this);
					}
					this._ManHinh.Entity = value;
					if ((value != null))
					{
						value.PhanQuyens.Add(this);
						this._MaMH = value.MaMH;
					}
					else
					{
						this._MaMH = default(string);
					}
					this.SendPropertyChanged("ManHinh");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="VaiTro_PhanQuyen", Storage="_VaiTro", ThisKey="MaVaiTro", OtherKey="MaVaiTro", IsForeignKey=true)]
		public VaiTro VaiTro
		{
			get
			{
				return this._VaiTro.Entity;
			}
			set
			{
				VaiTro previousValue = this._VaiTro.Entity;
				if (((previousValue != value) 
							|| (this._VaiTro.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._VaiTro.Entity = null;
						previousValue.PhanQuyens.Remove(this);
					}
					this._VaiTro.Entity = value;
					if ((value != null))
					{
						value.PhanQuyens.Add(this);
						this._MaVaiTro = value.MaVaiTro;
					}
					else
					{
						this._MaVaiTro = default(string);
					}
					this.SendPropertyChanged("VaiTro");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.PhieuNhap")]
	public partial class PhieuNhap : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _MaPhieu;
		
		private string _MaNCC;
		
		private string _MaNV;
		
		private System.Nullable<System.DateTime> _NgayNhap;
		
		private System.Nullable<double> _TongTien;
		
		private string _GhiChu;
		
		private EntitySet<CTPN_TB> _CTPN_TBs;
		
		private EntitySet<CTPN_TP> _CTPN_TPs;
		
		private EntityRef<NhaCungCap> _NhaCungCap;
		
		private EntityRef<NhanVien> _NhanVien;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMaPhieuChanging(string value);
    partial void OnMaPhieuChanged();
    partial void OnMaNCCChanging(string value);
    partial void OnMaNCCChanged();
    partial void OnMaNVChanging(string value);
    partial void OnMaNVChanged();
    partial void OnNgayNhapChanging(System.Nullable<System.DateTime> value);
    partial void OnNgayNhapChanged();
    partial void OnTongTienChanging(System.Nullable<double> value);
    partial void OnTongTienChanged();
    partial void OnGhiChuChanging(string value);
    partial void OnGhiChuChanged();
    #endregion
		
		public PhieuNhap()
		{
			this._CTPN_TBs = new EntitySet<CTPN_TB>(new Action<CTPN_TB>(this.attach_CTPN_TBs), new Action<CTPN_TB>(this.detach_CTPN_TBs));
			this._CTPN_TPs = new EntitySet<CTPN_TP>(new Action<CTPN_TP>(this.attach_CTPN_TPs), new Action<CTPN_TP>(this.detach_CTPN_TPs));
			this._NhaCungCap = default(EntityRef<NhaCungCap>);
			this._NhanVien = default(EntityRef<NhanVien>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaPhieu", DbType="VarChar(10) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string MaPhieu
		{
			get
			{
				return this._MaPhieu;
			}
			set
			{
				if ((this._MaPhieu != value))
				{
					this.OnMaPhieuChanging(value);
					this.SendPropertyChanging();
					this._MaPhieu = value;
					this.SendPropertyChanged("MaPhieu");
					this.OnMaPhieuChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaNCC", DbType="VarChar(10)")]
		public string MaNCC
		{
			get
			{
				return this._MaNCC;
			}
			set
			{
				if ((this._MaNCC != value))
				{
					if (this._NhaCungCap.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMaNCCChanging(value);
					this.SendPropertyChanging();
					this._MaNCC = value;
					this.SendPropertyChanged("MaNCC");
					this.OnMaNCCChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaNV", DbType="VarChar(10)")]
		public string MaNV
		{
			get
			{
				return this._MaNV;
			}
			set
			{
				if ((this._MaNV != value))
				{
					if (this._NhanVien.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMaNVChanging(value);
					this.SendPropertyChanging();
					this._MaNV = value;
					this.SendPropertyChanged("MaNV");
					this.OnMaNVChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NgayNhap", DbType="Date")]
		public System.Nullable<System.DateTime> NgayNhap
		{
			get
			{
				return this._NgayNhap;
			}
			set
			{
				if ((this._NgayNhap != value))
				{
					this.OnNgayNhapChanging(value);
					this.SendPropertyChanging();
					this._NgayNhap = value;
					this.SendPropertyChanged("NgayNhap");
					this.OnNgayNhapChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TongTien", DbType="Float")]
		public System.Nullable<double> TongTien
		{
			get
			{
				return this._TongTien;
			}
			set
			{
				if ((this._TongTien != value))
				{
					this.OnTongTienChanging(value);
					this.SendPropertyChanging();
					this._TongTien = value;
					this.SendPropertyChanged("TongTien");
					this.OnTongTienChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GhiChu", DbType="NVarChar(100)")]
		public string GhiChu
		{
			get
			{
				return this._GhiChu;
			}
			set
			{
				if ((this._GhiChu != value))
				{
					this.OnGhiChuChanging(value);
					this.SendPropertyChanging();
					this._GhiChu = value;
					this.SendPropertyChanged("GhiChu");
					this.OnGhiChuChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PhieuNhap_CTPN_TB", Storage="_CTPN_TBs", ThisKey="MaPhieu", OtherKey="MaPhieu")]
		public EntitySet<CTPN_TB> CTPN_TBs
		{
			get
			{
				return this._CTPN_TBs;
			}
			set
			{
				this._CTPN_TBs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PhieuNhap_CTPN_TP", Storage="_CTPN_TPs", ThisKey="MaPhieu", OtherKey="MaPhieu")]
		public EntitySet<CTPN_TP> CTPN_TPs
		{
			get
			{
				return this._CTPN_TPs;
			}
			set
			{
				this._CTPN_TPs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="NhaCungCap_PhieuNhap", Storage="_NhaCungCap", ThisKey="MaNCC", OtherKey="MaNCC", IsForeignKey=true, DeleteRule="CASCADE")]
		public NhaCungCap NhaCungCap
		{
			get
			{
				return this._NhaCungCap.Entity;
			}
			set
			{
				NhaCungCap previousValue = this._NhaCungCap.Entity;
				if (((previousValue != value) 
							|| (this._NhaCungCap.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._NhaCungCap.Entity = null;
						previousValue.PhieuNhaps.Remove(this);
					}
					this._NhaCungCap.Entity = value;
					if ((value != null))
					{
						value.PhieuNhaps.Add(this);
						this._MaNCC = value.MaNCC;
					}
					else
					{
						this._MaNCC = default(string);
					}
					this.SendPropertyChanged("NhaCungCap");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="NhanVien_PhieuNhap", Storage="_NhanVien", ThisKey="MaNV", OtherKey="MaNV", IsForeignKey=true)]
		public NhanVien NhanVien
		{
			get
			{
				return this._NhanVien.Entity;
			}
			set
			{
				NhanVien previousValue = this._NhanVien.Entity;
				if (((previousValue != value) 
							|| (this._NhanVien.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._NhanVien.Entity = null;
						previousValue.PhieuNhaps.Remove(this);
					}
					this._NhanVien.Entity = value;
					if ((value != null))
					{
						value.PhieuNhaps.Add(this);
						this._MaNV = value.MaNV;
					}
					else
					{
						this._MaNV = default(string);
					}
					this.SendPropertyChanged("NhanVien");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_CTPN_TBs(CTPN_TB entity)
		{
			this.SendPropertyChanging();
			entity.PhieuNhap = this;
		}
		
		private void detach_CTPN_TBs(CTPN_TB entity)
		{
			this.SendPropertyChanging();
			entity.PhieuNhap = null;
		}
		
		private void attach_CTPN_TPs(CTPN_TP entity)
		{
			this.SendPropertyChanging();
			entity.PhieuNhap = this;
		}
		
		private void detach_CTPN_TPs(CTPN_TP entity)
		{
			this.SendPropertyChanging();
			entity.PhieuNhap = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.TaiKhoan")]
	public partial class TaiKhoan : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _Username;
		
		private string _Password;
		
		private string _MaNV;
		
		private string _Role;
		
		private EntityRef<NhanVien> _NhanVien;
		
		private EntityRef<VaiTro> _VaiTro;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnUsernameChanging(string value);
    partial void OnUsernameChanged();
    partial void OnPasswordChanging(string value);
    partial void OnPasswordChanged();
    partial void OnMaNVChanging(string value);
    partial void OnMaNVChanged();
    partial void OnRoleChanging(string value);
    partial void OnRoleChanged();
    #endregion
		
		public TaiKhoan()
		{
			this._NhanVien = default(EntityRef<NhanVien>);
			this._VaiTro = default(EntityRef<VaiTro>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Username", DbType="VarChar(10) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string Username
		{
			get
			{
				return this._Username;
			}
			set
			{
				if ((this._Username != value))
				{
					this.OnUsernameChanging(value);
					this.SendPropertyChanging();
					this._Username = value;
					this.SendPropertyChanged("Username");
					this.OnUsernameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Password", DbType="VarChar(10) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string Password
		{
			get
			{
				return this._Password;
			}
			set
			{
				if ((this._Password != value))
				{
					this.OnPasswordChanging(value);
					this.SendPropertyChanging();
					this._Password = value;
					this.SendPropertyChanged("Password");
					this.OnPasswordChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaNV", DbType="VarChar(10)")]
		public string MaNV
		{
			get
			{
				return this._MaNV;
			}
			set
			{
				if ((this._MaNV != value))
				{
					if (this._NhanVien.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMaNVChanging(value);
					this.SendPropertyChanging();
					this._MaNV = value;
					this.SendPropertyChanged("MaNV");
					this.OnMaNVChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Role", DbType="VarChar(10)")]
		public string Role
		{
			get
			{
				return this._Role;
			}
			set
			{
				if ((this._Role != value))
				{
					if (this._VaiTro.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnRoleChanging(value);
					this.SendPropertyChanging();
					this._Role = value;
					this.SendPropertyChanged("Role");
					this.OnRoleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="NhanVien_TaiKhoan", Storage="_NhanVien", ThisKey="MaNV", OtherKey="MaNV", IsForeignKey=true)]
		public NhanVien NhanVien
		{
			get
			{
				return this._NhanVien.Entity;
			}
			set
			{
				NhanVien previousValue = this._NhanVien.Entity;
				if (((previousValue != value) 
							|| (this._NhanVien.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._NhanVien.Entity = null;
						previousValue.TaiKhoans.Remove(this);
					}
					this._NhanVien.Entity = value;
					if ((value != null))
					{
						value.TaiKhoans.Add(this);
						this._MaNV = value.MaNV;
					}
					else
					{
						this._MaNV = default(string);
					}
					this.SendPropertyChanged("NhanVien");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="VaiTro_TaiKhoan", Storage="_VaiTro", ThisKey="Role", OtherKey="MaVaiTro", IsForeignKey=true)]
		public VaiTro VaiTro
		{
			get
			{
				return this._VaiTro.Entity;
			}
			set
			{
				VaiTro previousValue = this._VaiTro.Entity;
				if (((previousValue != value) 
							|| (this._VaiTro.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._VaiTro.Entity = null;
						previousValue.TaiKhoans.Remove(this);
					}
					this._VaiTro.Entity = value;
					if ((value != null))
					{
						value.TaiKhoans.Add(this);
						this._Role = value.MaVaiTro;
					}
					else
					{
						this._Role = default(string);
					}
					this.SendPropertyChanged("VaiTro");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.TKB")]
	public partial class TKB : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _MaLich;
		
		private string _MaNV;
		
		private System.DateTime _NgayLam;
		
		private System.Nullable<int> _ChamCong;
		
		private EntityRef<LichLamViec> _LichLamViec;
		
		private EntityRef<NhanVien> _NhanVien;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMaLichChanging(string value);
    partial void OnMaLichChanged();
    partial void OnMaNVChanging(string value);
    partial void OnMaNVChanged();
    partial void OnNgayLamChanging(System.DateTime value);
    partial void OnNgayLamChanged();
    partial void OnChamCongChanging(System.Nullable<int> value);
    partial void OnChamCongChanged();
    #endregion
		
		public TKB()
		{
			this._LichLamViec = default(EntityRef<LichLamViec>);
			this._NhanVien = default(EntityRef<NhanVien>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaLich", DbType="VarChar(10) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string MaLich
		{
			get
			{
				return this._MaLich;
			}
			set
			{
				if ((this._MaLich != value))
				{
					if (this._LichLamViec.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMaLichChanging(value);
					this.SendPropertyChanging();
					this._MaLich = value;
					this.SendPropertyChanged("MaLich");
					this.OnMaLichChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaNV", DbType="VarChar(10) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string MaNV
		{
			get
			{
				return this._MaNV;
			}
			set
			{
				if ((this._MaNV != value))
				{
					if (this._NhanVien.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMaNVChanging(value);
					this.SendPropertyChanging();
					this._MaNV = value;
					this.SendPropertyChanged("MaNV");
					this.OnMaNVChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NgayLam", DbType="Date NOT NULL", IsPrimaryKey=true)]
		public System.DateTime NgayLam
		{
			get
			{
				return this._NgayLam;
			}
			set
			{
				if ((this._NgayLam != value))
				{
					this.OnNgayLamChanging(value);
					this.SendPropertyChanging();
					this._NgayLam = value;
					this.SendPropertyChanged("NgayLam");
					this.OnNgayLamChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ChamCong", DbType="Int")]
		public System.Nullable<int> ChamCong
		{
			get
			{
				return this._ChamCong;
			}
			set
			{
				if ((this._ChamCong != value))
				{
					this.OnChamCongChanging(value);
					this.SendPropertyChanging();
					this._ChamCong = value;
					this.SendPropertyChanged("ChamCong");
					this.OnChamCongChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="LichLamViec_TKB", Storage="_LichLamViec", ThisKey="MaLich", OtherKey="MaLich", IsForeignKey=true)]
		public LichLamViec LichLamViec
		{
			get
			{
				return this._LichLamViec.Entity;
			}
			set
			{
				LichLamViec previousValue = this._LichLamViec.Entity;
				if (((previousValue != value) 
							|| (this._LichLamViec.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._LichLamViec.Entity = null;
						previousValue.TKBs.Remove(this);
					}
					this._LichLamViec.Entity = value;
					if ((value != null))
					{
						value.TKBs.Add(this);
						this._MaLich = value.MaLich;
					}
					else
					{
						this._MaLich = default(string);
					}
					this.SendPropertyChanged("LichLamViec");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="NhanVien_TKB", Storage="_NhanVien", ThisKey="MaNV", OtherKey="MaNV", IsForeignKey=true)]
		public NhanVien NhanVien
		{
			get
			{
				return this._NhanVien.Entity;
			}
			set
			{
				NhanVien previousValue = this._NhanVien.Entity;
				if (((previousValue != value) 
							|| (this._NhanVien.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._NhanVien.Entity = null;
						previousValue.TKBs.Remove(this);
					}
					this._NhanVien.Entity = value;
					if ((value != null))
					{
						value.TKBs.Add(this);
						this._MaNV = value.MaNV;
					}
					else
					{
						this._MaNV = default(string);
					}
					this.SendPropertyChanged("NhanVien");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ThietBi")]
	public partial class ThietBi : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _MaTB;
		
		private string _TenTB;
		
		private System.Nullable<double> _GiaBan;
		
		private System.Nullable<int> _SoLuong;
		
		private EntitySet<CT_TroChoi> _CT_TroChois;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMaTBChanging(string value);
    partial void OnMaTBChanged();
    partial void OnTenTBChanging(string value);
    partial void OnTenTBChanged();
    partial void OnGiaBanChanging(System.Nullable<double> value);
    partial void OnGiaBanChanged();
    partial void OnSoLuongChanging(System.Nullable<int> value);
    partial void OnSoLuongChanged();
    #endregion
		
		public ThietBi()
		{
			this._CT_TroChois = new EntitySet<CT_TroChoi>(new Action<CT_TroChoi>(this.attach_CT_TroChois), new Action<CT_TroChoi>(this.detach_CT_TroChois));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaTB", DbType="VarChar(10) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string MaTB
		{
			get
			{
				return this._MaTB;
			}
			set
			{
				if ((this._MaTB != value))
				{
					this.OnMaTBChanging(value);
					this.SendPropertyChanging();
					this._MaTB = value;
					this.SendPropertyChanged("MaTB");
					this.OnMaTBChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TenTB", DbType="NVarChar(50)")]
		public string TenTB
		{
			get
			{
				return this._TenTB;
			}
			set
			{
				if ((this._TenTB != value))
				{
					this.OnTenTBChanging(value);
					this.SendPropertyChanging();
					this._TenTB = value;
					this.SendPropertyChanged("TenTB");
					this.OnTenTBChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GiaBan", DbType="Float")]
		public System.Nullable<double> GiaBan
		{
			get
			{
				return this._GiaBan;
			}
			set
			{
				if ((this._GiaBan != value))
				{
					this.OnGiaBanChanging(value);
					this.SendPropertyChanging();
					this._GiaBan = value;
					this.SendPropertyChanged("GiaBan");
					this.OnGiaBanChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SoLuong", DbType="Int")]
		public System.Nullable<int> SoLuong
		{
			get
			{
				return this._SoLuong;
			}
			set
			{
				if ((this._SoLuong != value))
				{
					this.OnSoLuongChanging(value);
					this.SendPropertyChanging();
					this._SoLuong = value;
					this.SendPropertyChanged("SoLuong");
					this.OnSoLuongChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ThietBi_CT_TroChoi", Storage="_CT_TroChois", ThisKey="MaTB", OtherKey="MaTB")]
		public EntitySet<CT_TroChoi> CT_TroChois
		{
			get
			{
				return this._CT_TroChois;
			}
			set
			{
				this._CT_TroChois.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_CT_TroChois(CT_TroChoi entity)
		{
			this.SendPropertyChanging();
			entity.ThietBi = this;
		}
		
		private void detach_CT_TroChois(CT_TroChoi entity)
		{
			this.SendPropertyChanging();
			entity.ThietBi = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ThucPham")]
	public partial class ThucPham : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _MaTP;
		
		private string _TenTP;
		
		private string _MoTa;
		
		private System.Nullable<double> _GiaBan;
		
		private string _DVT;
		
		private System.Nullable<int> _SoLuong;
		
		private string _MaLoai;
		
		private string _TinhTrang;
		
		private EntitySet<Ve_TP> _Ve_TPs;
		
		private EntitySet<CTHD_TP> _CTHD_TPs;
		
		private EntityRef<LoaiTP> _LoaiTP;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMaTPChanging(string value);
    partial void OnMaTPChanged();
    partial void OnTenTPChanging(string value);
    partial void OnTenTPChanged();
    partial void OnMoTaChanging(string value);
    partial void OnMoTaChanged();
    partial void OnGiaBanChanging(System.Nullable<double> value);
    partial void OnGiaBanChanged();
    partial void OnDVTChanging(string value);
    partial void OnDVTChanged();
    partial void OnSoLuongChanging(System.Nullable<int> value);
    partial void OnSoLuongChanged();
    partial void OnMaLoaiChanging(string value);
    partial void OnMaLoaiChanged();
    partial void OnTinhTrangChanging(string value);
    partial void OnTinhTrangChanged();
    #endregion
		
		public ThucPham()
		{
			this._Ve_TPs = new EntitySet<Ve_TP>(new Action<Ve_TP>(this.attach_Ve_TPs), new Action<Ve_TP>(this.detach_Ve_TPs));
			this._CTHD_TPs = new EntitySet<CTHD_TP>(new Action<CTHD_TP>(this.attach_CTHD_TPs), new Action<CTHD_TP>(this.detach_CTHD_TPs));
			this._LoaiTP = default(EntityRef<LoaiTP>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaTP", DbType="VarChar(10) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string MaTP
		{
			get
			{
				return this._MaTP;
			}
			set
			{
				if ((this._MaTP != value))
				{
					this.OnMaTPChanging(value);
					this.SendPropertyChanging();
					this._MaTP = value;
					this.SendPropertyChanged("MaTP");
					this.OnMaTPChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TenTP", DbType="NVarChar(50)")]
		public string TenTP
		{
			get
			{
				return this._TenTP;
			}
			set
			{
				if ((this._TenTP != value))
				{
					this.OnTenTPChanging(value);
					this.SendPropertyChanging();
					this._TenTP = value;
					this.SendPropertyChanged("TenTP");
					this.OnTenTPChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MoTa", DbType="NVarChar(50)")]
		public string MoTa
		{
			get
			{
				return this._MoTa;
			}
			set
			{
				if ((this._MoTa != value))
				{
					this.OnMoTaChanging(value);
					this.SendPropertyChanging();
					this._MoTa = value;
					this.SendPropertyChanged("MoTa");
					this.OnMoTaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GiaBan", DbType="Float")]
		public System.Nullable<double> GiaBan
		{
			get
			{
				return this._GiaBan;
			}
			set
			{
				if ((this._GiaBan != value))
				{
					this.OnGiaBanChanging(value);
					this.SendPropertyChanging();
					this._GiaBan = value;
					this.SendPropertyChanged("GiaBan");
					this.OnGiaBanChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DVT", DbType="NVarChar(15)")]
		public string DVT
		{
			get
			{
				return this._DVT;
			}
			set
			{
				if ((this._DVT != value))
				{
					this.OnDVTChanging(value);
					this.SendPropertyChanging();
					this._DVT = value;
					this.SendPropertyChanged("DVT");
					this.OnDVTChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SoLuong", DbType="Int")]
		public System.Nullable<int> SoLuong
		{
			get
			{
				return this._SoLuong;
			}
			set
			{
				if ((this._SoLuong != value))
				{
					this.OnSoLuongChanging(value);
					this.SendPropertyChanging();
					this._SoLuong = value;
					this.SendPropertyChanged("SoLuong");
					this.OnSoLuongChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaLoai", DbType="VarChar(10)")]
		public string MaLoai
		{
			get
			{
				return this._MaLoai;
			}
			set
			{
				if ((this._MaLoai != value))
				{
					if (this._LoaiTP.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMaLoaiChanging(value);
					this.SendPropertyChanging();
					this._MaLoai = value;
					this.SendPropertyChanged("MaLoai");
					this.OnMaLoaiChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TinhTrang", DbType="NVarChar(30)")]
		public string TinhTrang
		{
			get
			{
				return this._TinhTrang;
			}
			set
			{
				if ((this._TinhTrang != value))
				{
					this.OnTinhTrangChanging(value);
					this.SendPropertyChanging();
					this._TinhTrang = value;
					this.SendPropertyChanged("TinhTrang");
					this.OnTinhTrangChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ThucPham_Ve_TP", Storage="_Ve_TPs", ThisKey="MaTP", OtherKey="MaTP")]
		public EntitySet<Ve_TP> Ve_TPs
		{
			get
			{
				return this._Ve_TPs;
			}
			set
			{
				this._Ve_TPs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ThucPham_CTHD_TP", Storage="_CTHD_TPs", ThisKey="MaTP", OtherKey="MaTP")]
		public EntitySet<CTHD_TP> CTHD_TPs
		{
			get
			{
				return this._CTHD_TPs;
			}
			set
			{
				this._CTHD_TPs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="LoaiTP_ThucPham", Storage="_LoaiTP", ThisKey="MaLoai", OtherKey="MaLoai", IsForeignKey=true)]
		public LoaiTP LoaiTP
		{
			get
			{
				return this._LoaiTP.Entity;
			}
			set
			{
				LoaiTP previousValue = this._LoaiTP.Entity;
				if (((previousValue != value) 
							|| (this._LoaiTP.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._LoaiTP.Entity = null;
						previousValue.ThucPhams.Remove(this);
					}
					this._LoaiTP.Entity = value;
					if ((value != null))
					{
						value.ThucPhams.Add(this);
						this._MaLoai = value.MaLoai;
					}
					else
					{
						this._MaLoai = default(string);
					}
					this.SendPropertyChanged("LoaiTP");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Ve_TPs(Ve_TP entity)
		{
			this.SendPropertyChanging();
			entity.ThucPham = this;
		}
		
		private void detach_Ve_TPs(Ve_TP entity)
		{
			this.SendPropertyChanging();
			entity.ThucPham = null;
		}
		
		private void attach_CTHD_TPs(CTHD_TP entity)
		{
			this.SendPropertyChanging();
			entity.ThucPham = this;
		}
		
		private void detach_CTHD_TPs(CTHD_TP entity)
		{
			this.SendPropertyChanging();
			entity.ThucPham = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.TroChoi")]
	public partial class TroChoi : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _MaTC;
		
		private string _TenTC;
		
		private string _DiaDiem;
		
		private string _LoaiTroChoi;
		
		private System.Nullable<System.DateTime> _NgayBatDau;
		
		private System.Nullable<System.DateTime> _NgayKetThuc;
		
		private string _TinhTrang;
		
		private EntitySet<CT_TroChoi> _CT_TroChois;
		
		private EntitySet<Ve> _Ves;
		
		private EntityRef<LoaiTC> _LoaiTC;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMaTCChanging(string value);
    partial void OnMaTCChanged();
    partial void OnTenTCChanging(string value);
    partial void OnTenTCChanged();
    partial void OnDiaDiemChanging(string value);
    partial void OnDiaDiemChanged();
    partial void OnLoaiTroChoiChanging(string value);
    partial void OnLoaiTroChoiChanged();
    partial void OnNgayBatDauChanging(System.Nullable<System.DateTime> value);
    partial void OnNgayBatDauChanged();
    partial void OnNgayKetThucChanging(System.Nullable<System.DateTime> value);
    partial void OnNgayKetThucChanged();
    partial void OnTinhTrangChanging(string value);
    partial void OnTinhTrangChanged();
    #endregion
		
		public TroChoi()
		{
			this._CT_TroChois = new EntitySet<CT_TroChoi>(new Action<CT_TroChoi>(this.attach_CT_TroChois), new Action<CT_TroChoi>(this.detach_CT_TroChois));
			this._Ves = new EntitySet<Ve>(new Action<Ve>(this.attach_Ves), new Action<Ve>(this.detach_Ves));
			this._LoaiTC = default(EntityRef<LoaiTC>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaTC", DbType="VarChar(10) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string MaTC
		{
			get
			{
				return this._MaTC;
			}
			set
			{
				if ((this._MaTC != value))
				{
					this.OnMaTCChanging(value);
					this.SendPropertyChanging();
					this._MaTC = value;
					this.SendPropertyChanged("MaTC");
					this.OnMaTCChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TenTC", DbType="NVarChar(50)")]
		public string TenTC
		{
			get
			{
				return this._TenTC;
			}
			set
			{
				if ((this._TenTC != value))
				{
					this.OnTenTCChanging(value);
					this.SendPropertyChanging();
					this._TenTC = value;
					this.SendPropertyChanged("TenTC");
					this.OnTenTCChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DiaDiem", DbType="NVarChar(50)")]
		public string DiaDiem
		{
			get
			{
				return this._DiaDiem;
			}
			set
			{
				if ((this._DiaDiem != value))
				{
					this.OnDiaDiemChanging(value);
					this.SendPropertyChanging();
					this._DiaDiem = value;
					this.SendPropertyChanged("DiaDiem");
					this.OnDiaDiemChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LoaiTroChoi", DbType="VarChar(10)")]
		public string LoaiTroChoi
		{
			get
			{
				return this._LoaiTroChoi;
			}
			set
			{
				if ((this._LoaiTroChoi != value))
				{
					if (this._LoaiTC.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnLoaiTroChoiChanging(value);
					this.SendPropertyChanging();
					this._LoaiTroChoi = value;
					this.SendPropertyChanged("LoaiTroChoi");
					this.OnLoaiTroChoiChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NgayBatDau", DbType="Date")]
		public System.Nullable<System.DateTime> NgayBatDau
		{
			get
			{
				return this._NgayBatDau;
			}
			set
			{
				if ((this._NgayBatDau != value))
				{
					this.OnNgayBatDauChanging(value);
					this.SendPropertyChanging();
					this._NgayBatDau = value;
					this.SendPropertyChanged("NgayBatDau");
					this.OnNgayBatDauChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NgayKetThuc", DbType="Date")]
		public System.Nullable<System.DateTime> NgayKetThuc
		{
			get
			{
				return this._NgayKetThuc;
			}
			set
			{
				if ((this._NgayKetThuc != value))
				{
					this.OnNgayKetThucChanging(value);
					this.SendPropertyChanging();
					this._NgayKetThuc = value;
					this.SendPropertyChanged("NgayKetThuc");
					this.OnNgayKetThucChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TinhTrang", DbType="NVarChar(50)")]
		public string TinhTrang
		{
			get
			{
				return this._TinhTrang;
			}
			set
			{
				if ((this._TinhTrang != value))
				{
					this.OnTinhTrangChanging(value);
					this.SendPropertyChanging();
					this._TinhTrang = value;
					this.SendPropertyChanged("TinhTrang");
					this.OnTinhTrangChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TroChoi_CT_TroChoi", Storage="_CT_TroChois", ThisKey="MaTC", OtherKey="MaTC")]
		public EntitySet<CT_TroChoi> CT_TroChois
		{
			get
			{
				return this._CT_TroChois;
			}
			set
			{
				this._CT_TroChois.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TroChoi_Ve", Storage="_Ves", ThisKey="MaTC", OtherKey="TroChoi")]
		public EntitySet<Ve> Ves
		{
			get
			{
				return this._Ves;
			}
			set
			{
				this._Ves.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="LoaiTC_TroChoi", Storage="_LoaiTC", ThisKey="LoaiTroChoi", OtherKey="MaLoai", IsForeignKey=true)]
		public LoaiTC LoaiTC
		{
			get
			{
				return this._LoaiTC.Entity;
			}
			set
			{
				LoaiTC previousValue = this._LoaiTC.Entity;
				if (((previousValue != value) 
							|| (this._LoaiTC.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._LoaiTC.Entity = null;
						previousValue.TroChois.Remove(this);
					}
					this._LoaiTC.Entity = value;
					if ((value != null))
					{
						value.TroChois.Add(this);
						this._LoaiTroChoi = value.MaLoai;
					}
					else
					{
						this._LoaiTroChoi = default(string);
					}
					this.SendPropertyChanged("LoaiTC");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_CT_TroChois(CT_TroChoi entity)
		{
			this.SendPropertyChanging();
			entity.TroChoi = this;
		}
		
		private void detach_CT_TroChois(CT_TroChoi entity)
		{
			this.SendPropertyChanging();
			entity.TroChoi = null;
		}
		
		private void attach_Ves(Ve entity)
		{
			this.SendPropertyChanging();
			entity.TroChoi1 = this;
		}
		
		private void detach_Ves(Ve entity)
		{
			this.SendPropertyChanging();
			entity.TroChoi1 = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.VaiTro")]
	public partial class VaiTro : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _MaVaiTro;
		
		private string _TenVaiTro;
		
		private EntitySet<PhanQuyen> _PhanQuyens;
		
		private EntitySet<TaiKhoan> _TaiKhoans;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMaVaiTroChanging(string value);
    partial void OnMaVaiTroChanged();
    partial void OnTenVaiTroChanging(string value);
    partial void OnTenVaiTroChanged();
    #endregion
		
		public VaiTro()
		{
			this._PhanQuyens = new EntitySet<PhanQuyen>(new Action<PhanQuyen>(this.attach_PhanQuyens), new Action<PhanQuyen>(this.detach_PhanQuyens));
			this._TaiKhoans = new EntitySet<TaiKhoan>(new Action<TaiKhoan>(this.attach_TaiKhoans), new Action<TaiKhoan>(this.detach_TaiKhoans));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaVaiTro", DbType="VarChar(10) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string MaVaiTro
		{
			get
			{
				return this._MaVaiTro;
			}
			set
			{
				if ((this._MaVaiTro != value))
				{
					this.OnMaVaiTroChanging(value);
					this.SendPropertyChanging();
					this._MaVaiTro = value;
					this.SendPropertyChanged("MaVaiTro");
					this.OnMaVaiTroChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TenVaiTro", DbType="NVarChar(50)")]
		public string TenVaiTro
		{
			get
			{
				return this._TenVaiTro;
			}
			set
			{
				if ((this._TenVaiTro != value))
				{
					this.OnTenVaiTroChanging(value);
					this.SendPropertyChanging();
					this._TenVaiTro = value;
					this.SendPropertyChanged("TenVaiTro");
					this.OnTenVaiTroChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="VaiTro_PhanQuyen", Storage="_PhanQuyens", ThisKey="MaVaiTro", OtherKey="MaVaiTro")]
		public EntitySet<PhanQuyen> PhanQuyens
		{
			get
			{
				return this._PhanQuyens;
			}
			set
			{
				this._PhanQuyens.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="VaiTro_TaiKhoan", Storage="_TaiKhoans", ThisKey="MaVaiTro", OtherKey="Role")]
		public EntitySet<TaiKhoan> TaiKhoans
		{
			get
			{
				return this._TaiKhoans;
			}
			set
			{
				this._TaiKhoans.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_PhanQuyens(PhanQuyen entity)
		{
			this.SendPropertyChanging();
			entity.VaiTro = this;
		}
		
		private void detach_PhanQuyens(PhanQuyen entity)
		{
			this.SendPropertyChanging();
			entity.VaiTro = null;
		}
		
		private void attach_TaiKhoans(TaiKhoan entity)
		{
			this.SendPropertyChanging();
			entity.VaiTro = this;
		}
		
		private void detach_TaiKhoans(TaiKhoan entity)
		{
			this.SendPropertyChanging();
			entity.VaiTro = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Ve")]
	public partial class Ve : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _MaVe;
		
		private string _LoaiVe;
		
		private System.Nullable<System.DateTime> _ThoiGianBan;
		
		private System.Nullable<int> _SoLuong;
		
		private string _TinhTrang;
		
		private string _TroChoi;
		
		private EntitySet<CTHD_Ve> _CTHD_Ves;
		
		private EntityRef<LoaiVe> _LoaiVe1;
		
		private EntityRef<TroChoi> _TroChoi1;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMaVeChanging(string value);
    partial void OnMaVeChanged();
    partial void OnLoaiVeChanging(string value);
    partial void OnLoaiVeChanged();
    partial void OnThoiGianBanChanging(System.Nullable<System.DateTime> value);
    partial void OnThoiGianBanChanged();
    partial void OnSoLuongChanging(System.Nullable<int> value);
    partial void OnSoLuongChanged();
    partial void OnTinhTrangChanging(string value);
    partial void OnTinhTrangChanged();
    partial void OnTroChoiChanging(string value);
    partial void OnTroChoiChanged();
    #endregion
		
		public Ve()
		{
			this._CTHD_Ves = new EntitySet<CTHD_Ve>(new Action<CTHD_Ve>(this.attach_CTHD_Ves), new Action<CTHD_Ve>(this.detach_CTHD_Ves));
			this._LoaiVe1 = default(EntityRef<LoaiVe>);
			this._TroChoi1 = default(EntityRef<TroChoi>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaVe", DbType="VarChar(10) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string MaVe
		{
			get
			{
				return this._MaVe;
			}
			set
			{
				if ((this._MaVe != value))
				{
					this.OnMaVeChanging(value);
					this.SendPropertyChanging();
					this._MaVe = value;
					this.SendPropertyChanged("MaVe");
					this.OnMaVeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LoaiVe", DbType="VarChar(10)")]
		public string LoaiVe
		{
			get
			{
				return this._LoaiVe;
			}
			set
			{
				if ((this._LoaiVe != value))
				{
					if (this._LoaiVe1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnLoaiVeChanging(value);
					this.SendPropertyChanging();
					this._LoaiVe = value;
					this.SendPropertyChanged("LoaiVe");
					this.OnLoaiVeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ThoiGianBan", DbType="Date")]
		public System.Nullable<System.DateTime> ThoiGianBan
		{
			get
			{
				return this._ThoiGianBan;
			}
			set
			{
				if ((this._ThoiGianBan != value))
				{
					this.OnThoiGianBanChanging(value);
					this.SendPropertyChanging();
					this._ThoiGianBan = value;
					this.SendPropertyChanged("ThoiGianBan");
					this.OnThoiGianBanChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SoLuong", DbType="Int")]
		public System.Nullable<int> SoLuong
		{
			get
			{
				return this._SoLuong;
			}
			set
			{
				if ((this._SoLuong != value))
				{
					this.OnSoLuongChanging(value);
					this.SendPropertyChanging();
					this._SoLuong = value;
					this.SendPropertyChanged("SoLuong");
					this.OnSoLuongChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TinhTrang", DbType="NVarChar(30)")]
		public string TinhTrang
		{
			get
			{
				return this._TinhTrang;
			}
			set
			{
				if ((this._TinhTrang != value))
				{
					this.OnTinhTrangChanging(value);
					this.SendPropertyChanging();
					this._TinhTrang = value;
					this.SendPropertyChanged("TinhTrang");
					this.OnTinhTrangChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TroChoi", DbType="VarChar(10)")]
		public string TroChoi
		{
			get
			{
				return this._TroChoi;
			}
			set
			{
				if ((this._TroChoi != value))
				{
					if (this._TroChoi1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnTroChoiChanging(value);
					this.SendPropertyChanging();
					this._TroChoi = value;
					this.SendPropertyChanged("TroChoi");
					this.OnTroChoiChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Ve_CTHD_Ve", Storage="_CTHD_Ves", ThisKey="MaVe", OtherKey="MaVe")]
		public EntitySet<CTHD_Ve> CTHD_Ves
		{
			get
			{
				return this._CTHD_Ves;
			}
			set
			{
				this._CTHD_Ves.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="LoaiVe_Ve", Storage="_LoaiVe1", ThisKey="LoaiVe", OtherKey="MaLoai", IsForeignKey=true)]
		public LoaiVe LoaiVe1
		{
			get
			{
				return this._LoaiVe1.Entity;
			}
			set
			{
				LoaiVe previousValue = this._LoaiVe1.Entity;
				if (((previousValue != value) 
							|| (this._LoaiVe1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._LoaiVe1.Entity = null;
						previousValue.Ves.Remove(this);
					}
					this._LoaiVe1.Entity = value;
					if ((value != null))
					{
						value.Ves.Add(this);
						this._LoaiVe = value.MaLoai;
					}
					else
					{
						this._LoaiVe = default(string);
					}
					this.SendPropertyChanged("LoaiVe1");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TroChoi_Ve", Storage="_TroChoi1", ThisKey="TroChoi", OtherKey="MaTC", IsForeignKey=true)]
		public TroChoi TroChoi1
		{
			get
			{
				return this._TroChoi1.Entity;
			}
			set
			{
				TroChoi previousValue = this._TroChoi1.Entity;
				if (((previousValue != value) 
							|| (this._TroChoi1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._TroChoi1.Entity = null;
						previousValue.Ves.Remove(this);
					}
					this._TroChoi1.Entity = value;
					if ((value != null))
					{
						value.Ves.Add(this);
						this._TroChoi = value.MaTC;
					}
					else
					{
						this._TroChoi = default(string);
					}
					this.SendPropertyChanged("TroChoi1");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_CTHD_Ves(CTHD_Ve entity)
		{
			this.SendPropertyChanging();
			entity.Ve = this;
		}
		
		private void detach_CTHD_Ves(CTHD_Ve entity)
		{
			this.SendPropertyChanging();
			entity.Ve = null;
		}
	}
}
#pragma warning restore 1591
